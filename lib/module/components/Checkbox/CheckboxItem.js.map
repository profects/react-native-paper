{"version":3,"sources":["CheckboxItem.js"],"names":["React","StyleSheet","View","CheckBox","Text","TouchableRipple","withTheme","CheckboxItem","Component","render","props","style","status","label","onPress","labelStyle","theme","colors","createElement","styles","container","pointerEvents","color","primary","Object","assign","displayName","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAkC,cAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAIC,YAAY;AAAG;AAAc,CAAC,MAAM;AACpC,QAAMA,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACvCC,IAAAA,MAAM,GAAG;AACL,0BAAmF,KAAKC,KAAxF;AAAA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,KAAjB;AAAwBC,QAAAA,OAAxB;AAAiCC,QAAAA,UAAjC;AAA6CC,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AAApD,OAAN;AAAA,YAAyEP,KAAzE;;AACA,0BAAQV,KAAK,CAACkB,aAAN,CAAoBb,eAApB,EAAqC;AAAES,QAAAA,OAAO,EAAEA;AAAX,OAArC,eACJd,KAAK,CAACkB,aAAN,CAAoBhB,IAApB,EAA0B;AAAES,QAAAA,KAAK,EAAE,CAACQ,MAAM,CAACC,SAAR,EAAmBT,KAAnB,CAAT;AAAoCU,QAAAA,aAAa,EAAE;AAAnD,OAA1B,eACIrB,KAAK,CAACkB,aAAN,CAAoBd,IAApB,EAA0B;AAAEO,QAAAA,KAAK,EAAE,CAACQ,MAAM,CAACN,KAAR,EAAeE,UAAf,EAA2B;AAAEO,UAAAA,KAAK,EAAEL,MAAM,CAACM;AAAhB,SAA3B;AAAT,OAA1B,EAA4FV,KAA5F,CADJ,eAEIb,KAAK,CAACkB,aAAN,CAAoBf,QAApB,EAA8BqB,MAAM,CAACC,MAAP,CAAc;AAAEb,QAAAA,MAAM,EAAEA;AAAV,OAAd,EAAkCF,KAAlC,CAA9B,CAFJ,CADI,CAAR;AAIH;;AAPsC;;AAS3CH,EAAAA,YAAY,CAACmB,WAAb,GAA2B,eAA3B;AACA,SAAOnB,YAAP;AACH,CAZgC,GAAjC;;AAaA,eAAeD,SAAS,CAACC,YAAD,CAAxB,C,CACA;;AACA,SAASA,YAAT;AACA,MAAMY,MAAM,GAAGlB,UAAU,CAAC0B,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,eAHT;AAIPC,IAAAA,eAAe,EAAE,CAJV;AAKPC,IAAAA,iBAAiB,EAAE;AALZ,GADkB;AAQ7BnB,EAAAA,KAAK,EAAE;AACHoB,IAAAA,QAAQ,EAAE;AADP;AARsB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, } from 'react-native';\nimport CheckBox from './Checkbox';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *\n *   render() {\n *     return(\n *       <View>\n *           <Checkbox.Item label=\"Item\" status=\"checked\" />\n *       </View>\n *     )\n *   }\n * }\n *```\n */\nlet CheckboxItem = /** @class */ (() => {\n    class CheckboxItem extends React.Component {\n        render() {\n            const { style, status, label, onPress, labelStyle, theme: { colors }, ...props } = this.props;\n            return (React.createElement(TouchableRipple, { onPress: onPress },\n                React.createElement(View, { style: [styles.container, style], pointerEvents: \"none\" },\n                    React.createElement(Text, { style: [styles.label, labelStyle, { color: colors.primary }] }, label),\n                    React.createElement(CheckBox, Object.assign({ status: status }, props)))));\n        }\n    }\n    CheckboxItem.displayName = 'Checkbox.Item';\n    return CheckboxItem;\n})();\nexport default withTheme(CheckboxItem);\n// @component-docs ignore-next-line\nexport { CheckboxItem };\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n    },\n    label: {\n        fontSize: 16,\n    },\n});\n"]}