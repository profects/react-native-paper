{"version":3,"sources":["ListAccordionRenderer.js"],"names":["color","React","View","TouchableRipple","Icon","withTheme","styles","ListAccordionGroupContext","ListAccordionRenderer","Component","constructor","arguments","state","expanded","props","handlePress","onPress","undefined","setState","render","left","right","children","theme","titleStyle","descriptionStyle","renderDescription","renderTitle","style","rowStyle","id","titleColor","colors","text","alpha","rgb","string","descriptionColor","expandedInternal","createElement","Consumer","groupContext","Error","expandedId","onAccordionPress","container","accessibilityTraits","accessibilityComponentType","accessibilityRole","row","primary","item","content","title","description","multiline","source","size","Children","map","child","isValidElement","cloneElement","displayName","defaultProps","titleNumberOfLines","descriptionNumberOfLines"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,yBAAT,QAA2C,sBAA3C;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,IAAIC,qBAAqB;AAAG;AAAc,CAAC,MAAM;AAC7C,QAAMA,qBAAN,SAAoCP,KAAK,CAACQ,SAA1C,CAAoD;AAChDC,IAAAA,WAAW,GAAG;AACV,YAAM,GAAGC,SAAT;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAX,IAAuB;AADxB,OAAb;;AAGA,WAAKE,WAAL,GAAmB,MAAM;AACrB,aAAKD,KAAL,CAAWE,OAAX,IAAsB,KAAKF,KAAL,CAAWE,OAAX,EAAtB;;AACA,YAAI,KAAKF,KAAL,CAAWD,QAAX,KAAwBI,SAA5B,EAAuC;AACnC;AACA;AACA,eAAKC,QAAL,CAAcN,KAAK,KAAK;AACpBC,YAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC;AADG,WAAL,CAAnB;AAGH;AACJ,OATD;AAUH;;AACDM,IAAAA,MAAM,GAAG;AACL,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA,KAAzB;AAAgCC,QAAAA,UAAhC;AAA4CC,QAAAA,gBAA5C;AAA8DC,QAAAA,iBAA9D;AAAiFC,QAAAA,WAAjF;AAA8FC,QAAAA,KAA9F;AAAqGC,QAAAA,QAArG;AAA+GC,QAAAA;AAA/G,UAAuH,KAAKhB,KAAlI;AACA,YAAMiB,UAAU,GAAG/B,KAAK,CAACuB,KAAK,CAACS,MAAN,CAAaC,IAAd,CAAL,CACdC,KADc,CACR,IADQ,EAEdC,GAFc,GAGdC,MAHc,EAAnB;AAIA,YAAMC,gBAAgB,GAAGrC,KAAK,CAACuB,KAAK,CAACS,MAAN,CAAaC,IAAd,CAAL,CACpBC,KADoB,CACd,IADc,EAEpBC,GAFoB,GAGpBC,MAHoB,EAAzB;AAIA,YAAME,gBAAgB,GAAG,KAAKxB,KAAL,CAAWD,QAAX,KAAwBI,SAAxB,GACnB,KAAKH,KAAL,CAAWD,QADQ,GAEnB,KAAKD,KAAL,CAAWC,QAFjB;AAGA,0BAAQZ,KAAK,CAACsC,aAAN,CAAoBhC,yBAAyB,CAACiC,QAA9C,EAAwD,IAAxD,EAA+DC,YAAD,IAAkB;AACpF,YAAIA,YAAY,KAAK,IAAjB,IAAyB,CAACX,EAA9B,EAAkC;AAC9B,gBAAM,IAAIY,KAAJ,CAAU,oFAAV,CAAN;AACH;;AACD,cAAM7B,QAAQ,GAAG4B,YAAY,GACvBA,YAAY,CAACE,UAAb,KAA4Bb,EADL,GAEvBQ,gBAFN;AAGA,cAAMvB,WAAW,GAAG0B,YAAY,IAAIX,EAAE,KAAKb,SAAvB,GACd,MAAMwB,YAAY,CAACG,gBAAb,CAA8Bd,EAA9B,CADQ,GAEd,KAAKf,WAFX;AAGA,4BAAQd,KAAK,CAACsC,aAAN,CAAoBrC,IAApB,EAA0B,IAA1B,eACJD,KAAK,CAACsC,aAAN,CAAoBpC,eAApB,EAAqC;AAAEyB,UAAAA,KAAK,EAAE,CAACtB,MAAM,CAACuC,SAAR,EAAmBjB,KAAnB,CAAT;AAAoCZ,UAAAA,OAAO,EAAED,WAA7C;AAA0D+B,UAAAA,mBAAmB,EAAE,QAA/E;AAAyFC,UAAAA,0BAA0B,EAAE,QAArH;AAA+HC,UAAAA,iBAAiB,EAAE;AAAlJ,SAArC,eACI/C,KAAK,CAACsC,aAAN,CAAoBrC,IAApB,EAA0B;AAAE0B,UAAAA,KAAK,EAAE,CAACtB,MAAM,CAAC2C,GAAR,EAAapB,QAAb;AAAT,SAA1B,EACIT,IAAI,GACEA,IAAI,CAAC;AACHpB,UAAAA,KAAK,EAAEa,QAAQ,GACTU,KAAK,CAACS,MAAN,CAAakB,OADJ,GAETb;AAHH,SAAD,CADN,GAME,IAPV,eAQIpC,KAAK,CAACsC,aAAN,CAAoBrC,IAApB,EAA0B;AAAE0B,UAAAA,KAAK,EAAE,CAACtB,MAAM,CAAC6C,IAAR,EAAc7C,MAAM,CAAC8C,OAArB;AAAT,SAA1B,EACIzB,WAAW,CAAC;AACRC,UAAAA,KAAK,EAAE,CACHtB,MAAM,CAAC+C,KADJ,EAEH;AACIrD,YAAAA,KAAK,EAAEa,QAAQ,GAAGU,KAAK,CAACS,MAAN,CAAakB,OAAhB,GAA0BnB;AAD7C,WAFG,EAKHP,UALG;AADC,SAAD,CADf,EAUIE,iBAAiB,IACbA,iBAAiB,CAAC;AACdE,UAAAA,KAAK,EAAE,CACHtB,MAAM,CAACgD,WADJ,EAEH;AACItD,YAAAA,KAAK,EAAEqC;AADX,WAFG,EAKHZ,gBALG;AADO,SAAD,CAXzB,CARJ,EA4BIJ,KAAK,GACCA,KAAK,CAAC;AACJrB,UAAAA,KAAK,EAAEa,QAAQ,GACTU,KAAK,CAACS,MAAN,CAAakB,OADJ,GAETb;AAHF,SAAD,CADN,GAMC,IAlCV,eAmCIpC,KAAK,CAACsC,aAAN,CAAoBrC,IAApB,EAA0B;AAAE0B,UAAAA,KAAK,EAAE,CAC3BtB,MAAM,CAAC6C,IADoB,EAE3BzB,iBAAiB,GAAGpB,MAAM,CAACiD,SAAV,GAAsBtC,SAFZ;AAAT,SAA1B,eAIIhB,KAAK,CAACsC,aAAN,CAAoBnC,IAApB,EAA0B;AAAEoD,UAAAA,MAAM,EAAE3C,QAAQ,GAAG,YAAH,GAAkB,cAApC;AAAoDb,UAAAA,KAAK,EAAE+B,UAA3D;AAAuE0B,UAAAA,IAAI,EAAE;AAA7E,SAA1B,CAJJ,CAnCJ,CADJ,CADI,EA0CJ5C,QAAQ,GACFZ,KAAK,CAACyD,QAAN,CAAeC,GAAf,CAAmBrC,QAAnB,EAA6BsC,KAAK,IAAI;AACpC,cAAIxC,IAAI,iBACJnB,KAAK,CAAC4D,cAAN,CAAqBD,KAArB,CADA,IAEA,CAACA,KAAK,CAAC9C,KAAN,CAAYM,IAFb,IAGA,CAACwC,KAAK,CAAC9C,KAAN,CAAYO,KAHjB,EAGwB;AACpB,gCAAOpB,KAAK,CAAC6D,YAAN,CAAmBF,KAAnB,EAA0B;AAC7BhC,cAAAA,KAAK,EAAE,CAACtB,MAAM,CAACsD,KAAR,EAAeA,KAAK,CAAC9C,KAAN,CAAYc,KAA3B;AADsB,aAA1B,CAAP;AAGH;;AACD,iBAAOgC,KAAP;AACH,SAVC,CADE,GAYF,IAtDF,CAAR;AAuDH,OAjEO,CAAR;AAkEH;;AAhG+C;;AAkGpDpD,EAAAA,qBAAqB,CAACuD,WAAtB,GAAoC,wBAApC;AACAvD,EAAAA,qBAAqB,CAACwD,YAAtB,GAAqC;AACjCC,IAAAA,kBAAkB,EAAE,CADa;AAEjCC,IAAAA,wBAAwB,EAAE;AAFO,GAArC;AAIA,SAAO1D,qBAAP;AACH,CAzGyC,GAA1C;;AA0GA,eAAeH,SAAS,CAACG,qBAAD,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport Icon from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { styles } from './ListAccordion';\nimport { ListAccordionGroupContext, } from './ListAccordionGroup';\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, Checkbox } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *   state = {\n *     expanded: true\n *   }\n *\n *   _handlePress = () =>\n *     this.setState({\n *       expanded: !this.state.expanded\n *     });\n *\n *   render() {\n *     return (\n *       <List.Section title=\"Accordions\">\n *         <List.Accordion\n *           title=\"Uncontrolled Accordion\"\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\n *         >\n *           <List.Item title=\"First item\" />\n *           <List.Item title=\"Second item\" />\n *         </List.Accordion>\n *\n *         <List.Accordion\n *           title=\"Controlled Accordion\"\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\n *           expanded={this.state.expanded}\n *           onPress={this._handlePress}\n *         >\n *           <List.Item title=\"First item\" />\n *           <List.Item title=\"Second item\" />\n *         </List.Accordion>\n *       </List.Section>\n *     );\n *   }\n * }\n *\n * export default MyComponent;\n * ```\n */\nlet ListAccordionRenderer = /** @class */ (() => {\n    class ListAccordionRenderer extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {\n                expanded: this.props.expanded || false,\n            };\n            this.handlePress = () => {\n                this.props.onPress && this.props.onPress();\n                if (this.props.expanded === undefined) {\n                    // Only update state of the `expanded` prop was not passed\n                    // If it was passed, the component will act as a controlled component\n                    this.setState(state => ({\n                        expanded: !state.expanded,\n                    }));\n                }\n            };\n        }\n        render() {\n            const { left, right, children, theme, titleStyle, descriptionStyle, renderDescription, renderTitle, style, rowStyle, id, } = this.props;\n            const titleColor = color(theme.colors.text)\n                .alpha(0.87)\n                .rgb()\n                .string();\n            const descriptionColor = color(theme.colors.text)\n                .alpha(0.54)\n                .rgb()\n                .string();\n            const expandedInternal = this.props.expanded !== undefined\n                ? this.props.expanded\n                : this.state.expanded;\n            return (React.createElement(ListAccordionGroupContext.Consumer, null, (groupContext) => {\n                if (groupContext !== null && !id) {\n                    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n                }\n                const expanded = groupContext\n                    ? groupContext.expandedId === id\n                    : expandedInternal;\n                const handlePress = groupContext && id !== undefined\n                    ? () => groupContext.onAccordionPress(id)\n                    : this.handlePress;\n                return (React.createElement(View, null,\n                    React.createElement(TouchableRipple, { style: [styles.container, style], onPress: handlePress, accessibilityTraits: \"button\", accessibilityComponentType: \"button\", accessibilityRole: \"button\" },\n                        React.createElement(View, { style: [styles.row, rowStyle] },\n                            left\n                                ? left({\n                                    color: expanded\n                                        ? theme.colors.primary\n                                        : descriptionColor,\n                                })\n                                : null,\n                            React.createElement(View, { style: [styles.item, styles.content] },\n                                renderTitle({\n                                    style: [\n                                        styles.title,\n                                        {\n                                            color: expanded ? theme.colors.primary : titleColor,\n                                        },\n                                        titleStyle,\n                                    ],\n                                }),\n                                renderDescription &&\n                                    renderDescription({\n                                        style: [\n                                            styles.description,\n                                            {\n                                                color: descriptionColor,\n                                            },\n                                            descriptionStyle,\n                                        ],\n                                    })),\n                            right\n                                ? right({\n                                    color: expanded\n                                        ? theme.colors.primary\n                                        : descriptionColor,\n                                })\n                                : null,\n                            React.createElement(View, { style: [\n                                    styles.item,\n                                    renderDescription ? styles.multiline : undefined,\n                                ] },\n                                React.createElement(Icon, { source: expanded ? 'chevron-up' : 'chevron-down', color: titleColor, size: 24 })))),\n                    expanded\n                        ? React.Children.map(children, child => {\n                            if (left &&\n                                React.isValidElement(child) &&\n                                !child.props.left &&\n                                !child.props.right) {\n                                return React.cloneElement(child, {\n                                    style: [styles.child, child.props.style],\n                                });\n                            }\n                            return child;\n                        })\n                        : null));\n            }));\n        }\n    }\n    ListAccordionRenderer.displayName = 'List.AccordionRenderer';\n    ListAccordionRenderer.defaultProps = {\n        titleNumberOfLines: 1,\n        descriptionNumberOfLines: 2,\n    };\n    return ListAccordionRenderer;\n})();\nexport default withTheme(ListAccordionRenderer);\n"]}