{"version":3,"sources":["ListAccordion.js"],"names":["color","React","View","StyleSheet","I18nManager","TouchableRipple","MaterialCommunityIcon","Text","withTheme","ListAccordionGroupContext","ListAccordion","Component","constructor","arguments","state","expanded","props","handlePress","onPress","undefined","setState","render","left","title","description","children","theme","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","titleColor","colors","text","alpha","rgb","string","descriptionColor","expandedInternal","createElement","Consumer","groupContext","Error","expandedId","onAccordionPress","styles","container","accessibilityTraits","accessibilityComponentType","accessibilityRole","row","pointerEvents","primary","item","content","numberOfLines","multiline","name","size","direction","isRTL","Children","map","child","isValidElement","right","cloneElement","displayName","defaultProps","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, I18nManager, } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { ListAccordionGroupContext, } from './ListAccordionGroup';\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, Checkbox } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *   state = {\n *     expanded: true\n *   }\n *\n *   _handlePress = () =>\n *     this.setState({\n *       expanded: !this.state.expanded\n *     });\n *\n *   render() {\n *     return (\n *       <List.Section title=\"Accordions\">\n *         <List.Accordion\n *           title=\"Uncontrolled Accordion\"\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\n *         >\n *           <List.Item title=\"First item\" />\n *           <List.Item title=\"Second item\" />\n *         </List.Accordion>\n *\n *         <List.Accordion\n *           title=\"Controlled Accordion\"\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\n *           expanded={this.state.expanded}\n *           onPress={this._handlePress}\n *         >\n *           <List.Item title=\"First item\" />\n *           <List.Item title=\"Second item\" />\n *         </List.Accordion>\n *       </List.Section>\n *     );\n *   }\n * }\n *\n * export default MyComponent;\n * ```\n */\nlet ListAccordion = /** @class */ (() => {\n    class ListAccordion extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {\n                expanded: this.props.expanded || false,\n            };\n            this.handlePress = () => {\n                this.props.onPress && this.props.onPress();\n                if (this.props.expanded === undefined) {\n                    // Only update state of the `expanded` prop was not passed\n                    // If it was passed, the component will act as a controlled component\n                    this.setState(state => ({\n                        expanded: !state.expanded,\n                    }));\n                }\n            };\n        }\n        render() {\n            const { left, title, description, children, theme, titleStyle, descriptionStyle, titleNumberOfLines, descriptionNumberOfLines, style, id, testID, } = this.props;\n            const titleColor = color(theme.colors.text)\n                .alpha(0.87)\n                .rgb()\n                .string();\n            const descriptionColor = color(theme.colors.text)\n                .alpha(0.54)\n                .rgb()\n                .string();\n            const expandedInternal = this.props.expanded !== undefined\n                ? this.props.expanded\n                : this.state.expanded;\n            return (React.createElement(ListAccordionGroupContext.Consumer, null, (groupContext) => {\n                if (groupContext !== null && !id) {\n                    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n                }\n                const expanded = groupContext\n                    ? groupContext.expandedId === id\n                    : expandedInternal;\n                const handlePress = groupContext && id !== undefined\n                    ? () => groupContext.onAccordionPress(id)\n                    : this.handlePress;\n                return (React.createElement(View, null,\n                    React.createElement(TouchableRipple, { style: [styles.container, style], onPress: handlePress, accessibilityTraits: \"button\", accessibilityComponentType: \"button\", accessibilityRole: \"button\", testID: testID },\n                        React.createElement(View, { style: styles.row, pointerEvents: \"none\" },\n                            left\n                                ? left({\n                                    color: expanded\n                                        ? theme.colors.primary\n                                        : descriptionColor,\n                                })\n                                : null,\n                            React.createElement(View, { style: [styles.item, styles.content] },\n                                React.createElement(Text, { numberOfLines: titleNumberOfLines, style: [\n                                        styles.title,\n                                        {\n                                            color: expanded ? theme.colors.primary : titleColor,\n                                        },\n                                        titleStyle,\n                                    ] }, title),\n                                description && (React.createElement(Text, { numberOfLines: descriptionNumberOfLines, style: [\n                                        styles.description,\n                                        {\n                                            color: descriptionColor,\n                                        },\n                                        descriptionStyle,\n                                    ] }, description))),\n                            React.createElement(View, { style: [\n                                    styles.item,\n                                    description ? styles.multiline : undefined,\n                                ] },\n                                React.createElement(MaterialCommunityIcon, { name: expanded ? 'chevron-up' : 'chevron-down', color: titleColor, size: 24, direction: I18nManager.isRTL ? 'rtl' : 'ltr' })))),\n                    expanded\n                        ? React.Children.map(children, child => {\n                            if (left &&\n                                React.isValidElement(child) &&\n                                !child.props.left &&\n                                !child.props.right) {\n                                return React.cloneElement(child, {\n                                    style: [styles.child, child.props.style],\n                                });\n                            }\n                            return child;\n                        })\n                        : null));\n            }));\n        }\n    }\n    ListAccordion.displayName = 'List.Accordion';\n    ListAccordion.defaultProps = {\n        titleNumberOfLines: 1,\n        descriptionNumberOfLines: 2,\n    };\n    return ListAccordion;\n})();\nexport const styles = StyleSheet.create({\n    container: {\n        padding: 8,\n    },\n    row: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    multiline: {\n        height: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    title: {\n        fontSize: 16,\n    },\n    description: {\n        fontSize: 14,\n    },\n    item: {\n        margin: 8,\n    },\n    child: {\n        paddingLeft: 64,\n    },\n    content: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n});\nexport default withTheme(ListAccordion);\n"]}