{"version":3,"sources":["TextInputOutlined.js"],"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","color","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","Component","render","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","multiline","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","font","regular","hasActiveOutline","focused","flatten","fontSize","fontSizeStyle","fontWeight","height","backgroundColor","background","viewStyle","inputTextColor","activeColor","outlineColor","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","labelProps","placeholderStyle","wiggleOffsetX","minHeight","createElement","Outline","paddingTop","paddingBottom","labelBackground","ref","placeholderTextColor","underlineColorAndroid","input","textAlignVertical","defaultProps","Object","assign","pointerEvents","outline","borderRadius","roundness","borderWidth","borderColor","create","position","left","paddingHorizontal","right","top","bottom","flexGrow","margin","textAlign","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, TextInput as NativeTextInput, StyleSheet, I18nManager, Platform, } from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, } from './constants';\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, interpolatePlaceholder, } from './helpers';\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\nlet TextInputOutlined = /** @class */ (() => {\n    class TextInputOutlined extends React.Component {\n        render() {\n            const { disabled, editable, label, error, selectionColor, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            underlineColor, dense, style, theme, render, multiline, parentState, innerRef, onFocus, onBlur, onChangeText, onLayoutAnimatedText, ...rest } = this.props;\n            const { colors, fonts } = theme;\n            const font = fonts.regular;\n            const hasActiveOutline = parentState.focused || error;\n            const { fontSize: fontSizeStyle, fontWeight, height, backgroundColor = colors.background, ...viewStyle } = (StyleSheet.flatten(style) || {});\n            const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n            let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n            if (disabled) {\n                inputTextColor = activeColor = color(colors.text)\n                    .alpha(0.54)\n                    .rgb()\n                    .string();\n                placeholderColor = outlineColor = colors.disabled;\n            }\n            else {\n                inputTextColor = colors.text;\n                activeColor = error ? colors.error : colors.primary;\n                placeholderColor = outlineColor = colors.placeholder;\n                errorColor = colors.error;\n            }\n            const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n            const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n            const labelWidth = parentState.labelLayout.width;\n            const labelHeight = parentState.labelLayout.height;\n            const labelHalfWidth = labelWidth / 2;\n            const labelHalfHeight = labelHeight / 2;\n            const baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) *\n                (labelHalfWidth -\n                    (labelScale * labelWidth) / 2 -\n                    (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n            const minInputHeight = (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n            const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n            const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n            if (height && typeof height !== 'number')\n                // eslint-disable-next-line\n                console.warn('Currently we support only numbers in height prop');\n            const paddingSettings = {\n                height: height ? +height : null,\n                labelHalfHeight,\n                offset: LABEL_PADDING_TOP,\n                multiline: multiline ? multiline : null,\n                dense: dense ? dense : null,\n                topPosition,\n                fontSize,\n                label,\n                scale: fontScale,\n                isAndroid: Platform.OS === 'android',\n                styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined),\n            };\n            const pad = calculatePadding(paddingSettings);\n            const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n            const baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n            const placeholderOpacity = interpolatePlaceholder(parentState.labeled, hasActiveOutline);\n            const labelProps = {\n                label,\n                onLayoutAnimatedText,\n                placeholderOpacity,\n                error,\n                placeholderStyle: styles.placeholder,\n                baseLabelTranslateY,\n                baseLabelTranslateX,\n                font,\n                fontSize,\n                fontWeight,\n                labelScale,\n                wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n                topPosition,\n                hasActiveOutline,\n                activeColor,\n                placeholderColor,\n                backgroundColor,\n                errorColor,\n            };\n            const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n            return (React.createElement(View, { style: viewStyle },\n                React.createElement(View, null,\n                    React.createElement(Outline, { theme: theme, hasActiveOutline: hasActiveOutline, activeColor: activeColor, outlineColor: outlineColor, backgroundColor: backgroundColor }),\n                    React.createElement(View, { style: {\n                            paddingTop: LABEL_PADDING_TOP,\n                            paddingBottom: 0,\n                            minHeight,\n                        } },\n                        React.createElement(InputLabel, { parentState: parentState, labelProps: labelProps, labelBackground: LabelBackground }),\n                        render?.({\n                            ...rest,\n                            ref: innerRef,\n                            onChangeText,\n                            placeholder: label\n                                ? parentState.placeholder\n                                : this.props.placeholder,\n                            placeholderTextColor: placeholderColor,\n                            editable: !disabled && editable,\n                            selectionColor: typeof selectionColor === 'undefined'\n                                ? activeColor\n                                : selectionColor,\n                            onFocus,\n                            onBlur,\n                            underlineColorAndroid: 'transparent',\n                            multiline,\n                            style: [\n                                styles.input,\n                                !multiline || (multiline && height)\n                                    ? { height: inputHeight }\n                                    : {},\n                                paddingOut,\n                                {\n                                    ...font,\n                                    fontSize,\n                                    fontWeight,\n                                    color: inputTextColor,\n                                    textAlignVertical: multiline ? 'top' : 'center',\n                                },\n                            ],\n                        })))));\n        }\n    }\n    TextInputOutlined.defaultProps = {\n        disabled: false,\n        error: false,\n        multiline: false,\n        editable: true,\n        render: (props) => React.createElement(NativeTextInput, Object.assign({}, props)),\n    };\n    return TextInputOutlined;\n})();\nexport default TextInputOutlined;\nconst Outline = ({ theme, hasActiveOutline, activeColor, outlineColor, backgroundColor, }) => (React.createElement(View, { pointerEvents: \"none\", style: [\n        styles.outline,\n        // eslint-disable-next-line react-native/no-inline-styles\n        {\n            backgroundColor,\n            borderRadius: theme.roundness,\n            borderWidth: hasActiveOutline ? 2 : 1,\n            borderColor: hasActiveOutline ? activeColor : outlineColor,\n        },\n    ] }));\nconst styles = StyleSheet.create({\n    placeholder: {\n        position: 'absolute',\n        left: 0,\n        paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    },\n    outline: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 6,\n        bottom: 0,\n    },\n    input: {\n        flexGrow: 1,\n        paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n        margin: 0,\n        textAlign: I18nManager.isRTL ? 'right' : 'left',\n        zIndex: 1,\n    },\n    inputOutlined: {\n        paddingTop: 8,\n        paddingBottom: 8,\n    },\n    inputOutlinedDense: {\n        paddingTop: 4,\n        paddingBottom: 4,\n    },\n});\n"]}