{"version":3,"sources":["AvatarIcon.js"],"names":["React","View","StyleSheet","color","Icon","withTheme","white","defaultSize","Avatar","Component","render","props","icon","size","style","theme","rest","flatten","backgroundColor","colors","primary","restStyle","textColor","isLight","createElement","Object","assign","width","height","borderRadius","styles","container","source","displayName","defaultProps","create","justifyContent","alignItems"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,cAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,MAAMC,WAAW,GAAG,EAApB;AACA;;;;;;;;;;;;;;;;;;;;AAmBA,IAAIC,MAAM;AAAG;AAAc,CAAC,MAAM;AAC9B,QAAMA,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACjCC,IAAAA,MAAM,GAAG;AACL,0BAA4D,KAAKC,KAAjE;AAAA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,IAAI,GAAGN,WAAf;AAA4BO,QAAAA,KAA5B;AAAmCC,QAAAA;AAAnC,OAAN;AAAA,YAAmDC,IAAnD;;AACA,mBAAiEd,UAAU,CAACe,OAAX,CAAmBH,KAAnB,KAA6B,EAA9F;AAAA,YAAM;AAAEI,QAAAA,eAAe,GAAGH,KAAK,CAACI,MAAN,CAAaC;AAAjC,OAAN;AAAA,YAAmDC,SAAnD;;AACA,YAAMC,SAAS,GAAG,KAAKX,KAAL,CAAWR,KAAX,KACbA,KAAK,CAACe,eAAD,CAAL,CAAuBK,OAAvB,KAAmC,oBAAnC,GAA0DjB,KAD7C,CAAlB;AAEA,0BAAQN,KAAK,CAACwB,aAAN,CAAoBvB,IAApB,EAA0BwB,MAAM,CAACC,MAAP,CAAc;AAAEZ,QAAAA,KAAK,EAAE,CACjD;AACIa,UAAAA,KAAK,EAAEd,IADX;AAEIe,UAAAA,MAAM,EAAEf,IAFZ;AAGIgB,UAAAA,YAAY,EAAEhB,IAAI,GAAG,CAHzB;AAIIK,UAAAA;AAJJ,SADiD,EAOjDY,MAAM,CAACC,SAP0C,EAQjDV,SARiD;AAAT,OAAd,EASzBL,IATyB,CAA1B,eAUJhB,KAAK,CAACwB,aAAN,CAAoBpB,IAApB,EAA0B;AAAE4B,QAAAA,MAAM,EAAEpB,IAAV;AAAgBT,QAAAA,KAAK,EAAEmB,SAAvB;AAAkCT,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAA/C,OAA1B,CAVI,CAAR;AAWH;;AAjBgC;;AAmBrCL,EAAAA,MAAM,CAACyB,WAAP,GAAqB,aAArB;AACAzB,EAAAA,MAAM,CAAC0B,YAAP,GAAsB;AAClBrB,IAAAA,IAAI,EAAEN;AADY,GAAtB;AAGA,SAAOC,MAAP;AACH,CAzB0B,GAA3B;;AA0BA,MAAMsB,MAAM,GAAG5B,UAAU,CAACiC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,UAAU,EAAE;AAFL;AADkB,CAAlB,CAAf;AAMA,eAAehC,SAAS,CAACG,MAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport Icon from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nconst defaultSize = 64;\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nlet Avatar = /** @class */ (() => {\n    class Avatar extends React.Component {\n        render() {\n            const { icon, size = defaultSize, style, theme, ...rest } = this.props;\n            const { backgroundColor = theme.colors.primary, ...restStyle } = StyleSheet.flatten(style) || {};\n            const textColor = this.props.color ||\n                (color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n            return (React.createElement(View, Object.assign({ style: [\n                    {\n                        width: size,\n                        height: size,\n                        borderRadius: size / 2,\n                        backgroundColor,\n                    },\n                    styles.container,\n                    restStyle,\n                ] }, rest),\n                React.createElement(Icon, { source: icon, color: textColor, size: size * 0.6 })));\n        }\n    }\n    Avatar.displayName = 'Avatar.Icon';\n    Avatar.defaultProps = {\n        size: defaultSize,\n    };\n    return Avatar;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n});\nexport default withTheme(Avatar);\n"]}