{"version":3,"sources":["AvatarImage.js"],"names":["defaultSize","AvatarImage","props","size","source","style","theme","rest","colors","StyleSheet","flatten","backgroundColor","primary","React","createElement","View","width","height","borderRadius","Image","Component","displayName","defaultProps"],"mappings":"k5BAAA,oDACA,yCACA,2C,mtBACA,GAAMA,CAAAA,WAAW,CAAG,EAApB,CAoBA,GAAIC,CAAAA,WAAW,CAAkB,UAAM,IAC7BA,CAAAA,WAD6B,6SAEtB,iBACyD,KAAKC,KAD9D,8BACGC,IADH,CACGA,IADH,2BACUH,WADV,kBACuBI,MADvB,aACuBA,MADvB,CAC+BC,KAD/B,aAC+BA,KAD/B,CACsCC,KADtC,aACsCA,KADtC,CACgDC,IADhD,yFAEGC,CAAAA,MAFH,CAEcF,KAFd,CAEGE,MAFH,UAGwCC,wBAAWC,OAAX,CAAmBL,KAAnB,GAA6B,EAHrE,2BAGGM,eAHH,CAGGA,eAHH,+BAGqBH,MAAM,CAACI,OAH5B,sBAIL,MAAQC,CAAAA,KAAK,CAACC,aAAN,CAAoBC,iBAApB,CAA0B,sBAAc,CAAEV,KAAK,CAAE,CACjD,CACIW,KAAK,CAAEb,IADX,CAEIc,MAAM,CAAEd,IAFZ,CAGIe,YAAY,CAAEf,IAAI,CAAG,CAHzB,CAIIQ,eAAe,CAAfA,eAJJ,CADiD,CAOjDN,KAPiD,CAAT,CAAd,CAQzBE,IARyB,CAA1B,CASJM,KAAK,CAACC,aAAN,CAAoBK,kBAApB,CAA2B,CAAEf,MAAM,CAAEA,MAAV,CAAkBC,KAAK,CAAE,CAAEW,KAAK,CAAEb,IAAT,CAAec,MAAM,CAAEd,IAAvB,CAA6Be,YAAY,CAAEf,IAAI,CAAG,CAAlD,CAAzB,CAA3B,CATI,CAAR,CAUH,CAhB8B,yBACTU,KAAK,CAACO,SADG,EAkBnCnB,WAAW,CAACoB,WAAZ,CAA0B,cAA1B,CACApB,WAAW,CAACqB,YAAZ,CAA2B,CACvBnB,IAAI,CAAEH,WADiB,CAA3B,CAGA,MAAOC,CAAAA,WAAP,CACH,CAvB+B,EAAhC,C,aAwBe,uBAAUA,WAAV,C","sourcesContent":["import * as React from 'react';\nimport { Image, StyleSheet, View, } from 'react-native';\nimport { withTheme } from '../../core/theming';\nconst defaultSize = 64;\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * ```\n */\nlet AvatarImage = /** @class */ (() => {\n    class AvatarImage extends React.Component {\n        render() {\n            const { size = defaultSize, source, style, theme, ...rest } = this.props;\n            const { colors } = theme;\n            const { backgroundColor = colors.primary } = StyleSheet.flatten(style) || {};\n            return (React.createElement(View, Object.assign({ style: [\n                    {\n                        width: size,\n                        height: size,\n                        borderRadius: size / 2,\n                        backgroundColor,\n                    },\n                    style,\n                ] }, rest),\n                React.createElement(Image, { source: source, style: { width: size, height: size, borderRadius: size / 2 } })));\n        }\n    }\n    AvatarImage.displayName = 'Avatar.Image';\n    AvatarImage.defaultProps = {\n        size: defaultSize,\n    };\n    return AvatarImage;\n})();\nexport default withTheme(AvatarImage);\n"]}