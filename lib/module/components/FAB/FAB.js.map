{"version":3,"sources":["FAB.js"],"names":["color","React","Animated","View","StyleSheet","ActivityIndicator","FABGroup","Surface","CrossFadeIcon","Text","TouchableRipple","black","white","withTheme","FAB","Component","constructor","arguments","state","visibility","Value","props","visible","componentDidUpdate","prevProps","scale","theme","animation","timing","toValue","duration","useNativeDriver","start","render","small","icon","label","accessibilityLabel","customColor","disabled","onPress","style","loading","testID","rest","disabledColor","dark","alpha","rgb","string","backgroundColor","colors","accent","flatten","foregroundColor","isLight","rippleColor","createElement","Object","assign","opacity","transform","styles","container","pointerEvents","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","touchable","content","extended","standard","source","size","fonts","medium","toUpperCase","Group","defaultProps","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport FABGroup from './FABGroup';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nlet FAB = /** @class */ (() => {\n    class FAB extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {\n                visibility: new Animated.Value(this.props.visible ? 1 : 0),\n            };\n        }\n        componentDidUpdate(prevProps) {\n            const { scale } = this.props.theme.animation;\n            if (this.props.visible === prevProps.visible) {\n                return;\n            }\n            if (this.props.visible) {\n                Animated.timing(this.state.visibility, {\n                    toValue: 1,\n                    duration: 200 * scale,\n                    useNativeDriver: true,\n                }).start();\n            }\n            else {\n                Animated.timing(this.state.visibility, {\n                    toValue: 0,\n                    duration: 150 * scale,\n                    useNativeDriver: true,\n                }).start();\n            }\n        }\n        render() {\n            const { small, icon, label, accessibilityLabel = label, color: customColor, disabled, onPress, theme, style, visible, loading, testID, ...rest } = this.props;\n            const { visibility } = this.state;\n            const disabledColor = color(theme.dark ? white : black)\n                .alpha(0.12)\n                .rgb()\n                .string();\n            const { backgroundColor = disabled ? disabledColor : theme.colors.accent } = StyleSheet.flatten(style) || {};\n            let foregroundColor;\n            if (typeof customColor !== 'undefined') {\n                foregroundColor = customColor;\n            }\n            else if (disabled) {\n                foregroundColor = color(theme.dark ? white : black)\n                    .alpha(0.32)\n                    .rgb()\n                    .string();\n            }\n            else {\n                foregroundColor = !color(backgroundColor).isLight()\n                    ? white\n                    : 'rgba(0, 0, 0, .54)';\n            }\n            const rippleColor = color(foregroundColor)\n                .alpha(0.32)\n                .rgb()\n                .string();\n            return (React.createElement(Surface, Object.assign({}, rest, { style: [\n                    {\n                        backgroundColor,\n                        opacity: visibility,\n                        transform: [\n                            {\n                                scale: visibility,\n                            },\n                        ],\n                    },\n                    styles.container,\n                    disabled && styles.disabled,\n                    style,\n                ], pointerEvents: visible ? 'auto' : 'none' }),\n                React.createElement(TouchableRipple, { borderless: true, onPress: onPress, rippleColor: rippleColor, disabled: disabled, accessibilityLabel: accessibilityLabel, accessibilityTraits: disabled ? ['button', 'disabled'] : 'button', accessibilityComponentType: \"button\", accessibilityRole: \"button\", accessibilityStates: disabled ? ['disabled'] : [], style: styles.touchable, testID: testID },\n                    React.createElement(View, { style: [\n                            styles.content,\n                            label ? styles.extended : small ? styles.small : styles.standard,\n                        ], pointerEvents: \"none\" },\n                        icon && loading !== true ? (React.createElement(CrossFadeIcon, { source: icon, size: 24, color: foregroundColor })) : null,\n                        loading ? (React.createElement(ActivityIndicator, { size: 18, color: foregroundColor })) : null,\n                        label ? (React.createElement(Text, { style: [\n                                styles.label,\n                                { color: foregroundColor, ...theme.fonts.medium },\n                            ] }, label.toUpperCase())) : null))));\n        }\n    }\n    // @component ./FABGroup.tsx\n    FAB.Group = FABGroup;\n    FAB.defaultProps = {\n        visible: true,\n    };\n    return FAB;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        borderRadius: 28,\n        elevation: 6,\n    },\n    touchable: {\n        borderRadius: 28,\n    },\n    standard: {\n        height: 56,\n        width: 56,\n    },\n    small: {\n        height: 40,\n        width: 40,\n    },\n    extended: {\n        height: 48,\n        paddingHorizontal: 16,\n    },\n    content: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    label: {\n        marginHorizontal: 8,\n    },\n    disabled: {\n        elevation: 0,\n    },\n});\nexport default withTheme(FAB);\n"]}