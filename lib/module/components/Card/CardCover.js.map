{"version":3,"sources":["CardCover.js"],"names":["React","StyleSheet","View","Image","withTheme","grey200","CardCover","Component","render","props","index","total","style","theme","rest","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","createElement","styles","container","Object","assign","image","displayName","create","height","backgroundColor","overflow","flex","undefined","width","padding","justifyContent","resizeMode"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,cAAxC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAIC,SAAS;AAAG;AAAc,CAAC,MAAM;AACjC,QAAMA,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACpCC,IAAAA,MAAM,GAAG;AACL,0BAAgD,KAAKC,KAArD;AAAA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,KAAT;AAAgBC,QAAAA,KAAhB;AAAuBC,QAAAA;AAAvB,OAAN;AAAA,YAAuCC,IAAvC;;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAgBF,KAAtB;AACA,UAAIG,UAAJ;;AACA,UAAIN,KAAK,KAAK,CAAd,EAAiB;AACb,YAAIC,KAAK,KAAK,CAAd,EAAiB;AACbK,UAAAA,UAAU,GAAG;AACTC,YAAAA,YAAY,EAAEF;AADL,WAAb;AAGH,SAJD,MAKK;AACDC,UAAAA,UAAU,GAAG;AACTE,YAAAA,mBAAmB,EAAEH,SADZ;AAETI,YAAAA,oBAAoB,EAAEJ;AAFb,WAAb;AAIH;AACJ,OAZD,MAaK,IAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;AACvDK,QAAAA,UAAU,GAAG;AACTI,UAAAA,sBAAsB,EAAEL;AADf,SAAb;AAGH;;AACD,0BAAQf,KAAK,CAACqB,aAAN,CAAoBnB,IAApB,EAA0B;AAAEU,QAAAA,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmBP,UAAnB,EAA+BJ,KAA/B;AAAT,OAA1B,eACJZ,KAAK,CAACqB,aAAN,CAAoBlB,KAApB,EAA2BqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,IAAlB,EAAwB;AAAEF,QAAAA,KAAK,EAAE,CAACU,MAAM,CAACI,KAAR,EAAeV,UAAf;AAAT,OAAxB,CAA3B,CADI,CAAR;AAEH;;AAzBmC;;AA2BxCV,EAAAA,SAAS,CAACqB,WAAV,GAAwB,YAAxB;AACA,SAAOrB,SAAP;AACH,CA9B6B,GAA9B;;AA+BA,MAAMgB,MAAM,GAAGrB,UAAU,CAAC2B,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,MAAM,EAAE,GADD;AAEPC,IAAAA,eAAe,EAAEzB,OAFV;AAGP0B,IAAAA,QAAQ,EAAE;AAHH,GADkB;AAM7BL,EAAAA,KAAK,EAAE;AACHM,IAAAA,IAAI,EAAE,CADH;AAEHH,IAAAA,MAAM,EAAEI,SAFL;AAGHC,IAAAA,KAAK,EAAED,SAHJ;AAIHE,IAAAA,OAAO,EAAE,EAJN;AAKHC,IAAAA,cAAc,EAAE,UALb;AAMHC,IAAAA,UAAU,EAAE;AANT;AANsB,CAAlB,CAAf;AAeA,eAAejC,SAAS,CAACE,SAAD,CAAxB,C,CACA;;AACA,SAASA,SAAT","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://facebook.github.io/react-native/docs/image.html#props\n */\nlet CardCover = /** @class */ (() => {\n    class CardCover extends React.Component {\n        render() {\n            const { index, total, style, theme, ...rest } = this.props;\n            const { roundness } = theme;\n            let coverStyle;\n            if (index === 0) {\n                if (total === 1) {\n                    coverStyle = {\n                        borderRadius: roundness,\n                    };\n                }\n                else {\n                    coverStyle = {\n                        borderTopLeftRadius: roundness,\n                        borderTopRightRadius: roundness,\n                    };\n                }\n            }\n            else if (typeof total === 'number' && index === total - 1) {\n                coverStyle = {\n                    borderBottomLeftRadius: roundness,\n                };\n            }\n            return (React.createElement(View, { style: [styles.container, coverStyle, style] },\n                React.createElement(Image, Object.assign({}, rest, { style: [styles.image, coverStyle] }))));\n        }\n    }\n    CardCover.displayName = 'Card.Cover';\n    return CardCover;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        height: 195,\n        backgroundColor: grey200,\n        overflow: 'hidden',\n    },\n    image: {\n        flex: 1,\n        height: undefined,\n        width: undefined,\n        padding: 16,\n        justifyContent: 'flex-end',\n        resizeMode: 'cover',\n    },\n});\nexport default withTheme(CardCover);\n// @component-docs ignore-next-line\nexport { CardCover };\n"]}