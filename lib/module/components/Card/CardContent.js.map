{"version":3,"sources":["CardContent.js"],"names":["React","StyleSheet","View","CardContent","Component","render","props","index","total","siblings","style","rest","cover","title","contentStyle","prev","next","styles","only","first","last","createElement","Object","assign","container","displayName","create","paddingHorizontal","paddingTop","paddingBottom","paddingVertical"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n/**\n * A component to show content inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-content-example.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Title, Paragraph } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet CardContent = /** @class */ (() => {\n    class CardContent extends React.Component {\n        render() {\n            const { index, total, siblings, style, ...rest } = this.props;\n            const cover = 'withTheme(CardCover)';\n            const title = 'withTheme(CardTitle)';\n            let contentStyle, prev, next;\n            if (typeof index === 'number' && siblings) {\n                prev = siblings[index - 1];\n                next = siblings[index + 1];\n            }\n            if ((prev === cover && next === cover) ||\n                (prev === title && next === title) ||\n                total === 1) {\n                contentStyle = styles.only;\n            }\n            else if (index === 0) {\n                if (next === cover || next === title) {\n                    contentStyle = styles.only;\n                }\n                else {\n                    contentStyle = styles.first;\n                }\n            }\n            else if (typeof total === 'number' && index === total - 1) {\n                if (prev === cover || prev === title) {\n                    contentStyle = styles.only;\n                }\n                else {\n                    contentStyle = styles.last;\n                }\n            }\n            else if (prev === cover || prev === title) {\n                contentStyle = styles.first;\n            }\n            else if (next === cover || next === title) {\n                contentStyle = styles.last;\n            }\n            return React.createElement(View, Object.assign({}, rest, { style: [styles.container, contentStyle, style] }));\n        }\n    }\n    CardContent.displayName = 'Card.Content';\n    return CardContent;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        paddingHorizontal: 16,\n    },\n    first: {\n        paddingTop: 16,\n    },\n    last: {\n        paddingBottom: 16,\n    },\n    only: {\n        paddingVertical: 16,\n    },\n});\nexport default CardContent;\n"]}