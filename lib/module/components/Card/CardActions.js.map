{"version":3,"sources":["CardActions.js"],"names":["React","StyleSheet","View","CardActions","Component","render","createElement","Object","assign","props","style","styles","container","Children","map","children","child","isValidElement","cloneElement","compact","displayName","create","flexDirection","alignItems","justifyContent","padding"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,cAAjC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIC,WAAW;AAAG;AAAc,CAAC,MAAM;AACnC,QAAMA,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACtCC,IAAAA,MAAM,GAAG;AACL,0BAAQL,KAAK,CAACM,aAAN,CAAoBJ,IAApB,EAA0BK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAvB,EAA8B;AAAEC,QAAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKH,KAAL,CAAWC,KAA9B;AAAT,OAA9B,CAA1B,EAA0GV,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmB,KAAKL,KAAL,CAAWM,QAA9B,EAAwCC,KAAK,IAAI,aAAAhB,KAAK,CAACiB,cAAN,CAAqBD,KAArB,iBAC7JhB,KAAK,CAACkB,YAAN,CAAmBF,KAAnB,EAA0B;AACxBG,QAAAA,OAAO,EAAEH,KAAK,CAACP,KAAN,CAAYU,OAAZ,KAAwB;AADT,OAA1B,CAD6J,GAI7JH,KAJ4G,CAA1G,CAAR;AAKH;;AAPqC;;AAS1Cb,EAAAA,WAAW,CAACiB,WAAZ,GAA0B,cAA1B;AACA,SAAOjB,WAAP;AACH,CAZ+B,GAAhC;;AAaA,MAAMQ,MAAM,GAAGV,UAAU,CAACoB,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,YAHT;AAIPC,IAAAA,OAAO,EAAE;AAJF;AADkB,CAAlB,CAAf;AAQA,eAAetB,WAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n/**\n * A component to show a list of actions inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet CardActions = /** @class */ (() => {\n    class CardActions extends React.Component {\n        render() {\n            return (React.createElement(View, Object.assign({}, this.props, { style: [styles.container, this.props.style] }), React.Children.map(this.props.children, child => React.isValidElement(child)\n                ? React.cloneElement(child, {\n                    compact: child.props.compact !== false,\n                })\n                : child)));\n        }\n    }\n    CardActions.displayName = 'Card.Actions';\n    return CardActions;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        padding: 8,\n    },\n});\nexport default CardActions;\n"]}