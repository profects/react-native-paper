{"version":3,"sources":["AppbarHeader.js"],"names":["AppbarHeader","props","statusBarHeight","APPROX_STATUSBAR_HEIGHT","style","dark","rest","theme","isDarkTheme","colors","mode","StyleSheet","flatten","height","DEFAULT_APPBAR_HEIGHT","elevation","customBackground","backgroundColor","zIndex","restStyle","surface","primary","Wrapper","View","SafeAreaView","React","createElement","Appbar","marginTop","styles","appbar","Component","displayName","create"],"mappings":"u6BAAA,oDACA,yCACA,qEACA,yDACA,mEACA,2CACA,0C,mtBA8CA,GAAIA,CAAAA,YAAY,CAAkB,UAAM,IAC9BA,CAAAA,YAD8B,kTAEvB,iBAG+D,KAAKC,KAHpE,mCAGLC,eAHK,CAGLA,eAHK,gCAGaC,kCAHb,uBAGsCC,KAHtC,aAGsCA,KAHtC,CAG6CC,IAH7C,aAG6CA,IAH7C,CAGsDC,IAHtD,uGAIuCA,IAAI,CAACC,KAJ5C,CAISC,WAJT,aAIGH,IAJH,CAIsBI,MAJtB,aAIsBA,MAJtB,CAI8BC,IAJ9B,aAI8BA,IAJ9B,UAKkHC,wBAAWC,OAAX,CAAmBR,KAAnB,GAA6B,EAL/I,kBAKGS,MALH,CAKGA,MALH,sBAKYC,6BALZ,iCAKmCC,SALnC,CAKmCA,SALnC,yBAK+C,CAL/C,gBAKmEC,gBALnE,MAKkDC,eALlD,kBAKqFC,MALrF,CAKqFA,MALrF,sBAK8F,CAL9F,aAKoGC,SALpG,+FAML,GAAMF,CAAAA,eAAe,CAAGD,gBAAgB,CAClCA,gBADkC,CAElCR,WAAW,EAAIE,IAAI,GAAK,UAAxB,CACI,qBAAQK,SAAR,CAAmBN,MAAM,CAACW,OAA1B,CADJ,CAEIX,MAAM,CAACY,OAJjB,CAMA,GAAMC,CAAAA,OAAO,CAAG,MAAO,MAAKrB,KAAL,CAAWC,eAAlB,GAAsC,QAAtC,CAAiDqB,iBAAjD,CAAwDC,yBAAxE,CACA,MAAQC,CAAAA,KAAK,CAACC,aAAN,CAAoBJ,OAApB,CAA6B,CAAElB,KAAK,CAAE,CACtC,CAAEa,eAAe,CAAfA,eAAF,CAAmBC,MAAM,CAANA,MAAnB,CAA2BH,SAAS,CAATA,SAA3B,CADsC,CAEtC,oBAAOA,SAAP,CAFsC,CAAT,CAA7B,CAIJU,KAAK,CAACC,aAAN,CAAoBC,eAApB,CAEE,sBAAc,CAEZvB,KAAK,CAAE,CAEH,CAAES,MAAM,CAANA,MAAF,CAAUI,eAAe,CAAfA,eAAV,CAA2BW,SAAS,CAAE1B,eAAtC,CAFG,CAGH2B,MAAM,CAACC,MAHJ,CAIHX,SAJG,CAFK,CAOTd,IAAI,CAAEA,IAPG,CAAd,CAOmBC,IAPnB,CAFF,CAJI,CAAR,CAcH,CA7B+B,0BACTmB,KAAK,CAACM,SADG,EA+BpC/B,YAAY,CAACgC,WAAb,CAA2B,eAA3B,CACA,MAAOhC,CAAAA,YAAP,CACH,CAjCgC,EAAjC,C,kCAkCA,GAAM6B,CAAAA,MAAM,CAAGlB,wBAAWsB,MAAX,CAAkB,CAC7BH,MAAM,CAAE,CACJf,SAAS,CAAE,CADP,CADqB,CAAlB,CAAf,C,aAKe,uBAAUf,YAAV,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, SafeAreaView, } from 'react-native';\nimport overlay from '../../styles/overlay';\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   _goBack = () => console.log('Went back');\n *\n *   _handleSearch = () => console.log('Searching');\n *\n *   _handleMore = () => console.log('Shown more');\n *\n *   render() {\n *     return (\n *       <Appbar.Header>\n *         <Appbar.BackAction\n *           onPress={this._goBack}\n *         />\n *         <Appbar.Content\n *           title=\"Title\"\n *           subtitle=\"Subtitle\"\n *         />\n *         <Appbar.Action icon=\"magnify\" onPress={this._handleSearch} />\n *         <Appbar.Action icon=\"dots-vertical\" onPress={this._handleMore} />\n *       </Appbar.Header>\n *     );\n *   }\n * }\n * ```\n */\nlet AppbarHeader = /** @class */ (() => {\n    class AppbarHeader extends React.Component {\n        render() {\n            const { \n            // Don't use default props since we check it to know whether we should use SafeAreaView\n            statusBarHeight = APPROX_STATUSBAR_HEIGHT, style, dark, ...rest } = this.props;\n            const { dark: isDarkTheme, colors, mode } = rest.theme;\n            const { height = DEFAULT_APPBAR_HEIGHT, elevation = 4, backgroundColor: customBackground, zIndex = 0, ...restStyle } = StyleSheet.flatten(style) || {};\n            const backgroundColor = customBackground\n                ? customBackground\n                : isDarkTheme && mode === 'adaptive'\n                    ? overlay(elevation, colors.surface)\n                    : colors.primary;\n            // Let the user override the behaviour\n            const Wrapper = typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n            return (React.createElement(Wrapper, { style: [\n                    { backgroundColor, zIndex, elevation },\n                    shadow(elevation),\n                ] },\n                React.createElement(Appbar\n                //@ts-ignore\n                , Object.assign({ \n                    //@ts-ignore\n                    style: [\n                        //@ts-ignore\n                        { height, backgroundColor, marginTop: statusBarHeight },\n                        styles.appbar,\n                        restStyle,\n                    ], dark: dark }, rest))));\n        }\n    }\n    AppbarHeader.displayName = 'Appbar.Header';\n    return AppbarHeader;\n})();\nconst styles = StyleSheet.create({\n    appbar: {\n        elevation: 0,\n    },\n});\nexport default withTheme(AppbarHeader);\n// @component-docs ignore-next-line\nexport { AppbarHeader };\n"]}