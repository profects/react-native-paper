{"version":3,"sources":["ActivityIndicator.js"],"names":["DURATION","ActivityIndicator","arguments","state","timer","Animated","Value","fade","props","animating","hidesWhenStopped","rotation","undefined","startRotation","scale","theme","animation","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","easing","Easing","linear","Platform","OS","prevProps","bind","indicatorColor","color","indicatorSize","size","style","rest","colors","primary","frames","bezier","containerStyle","width","height","overflow","React","createElement","View","styles","container","opacity","collapsable","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","key","layer","Component","defaultProps","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, Easing, Platform, StyleSheet, View, } from 'react-native';\nimport { withTheme } from '../core/theming';\nconst DURATION = 2400;\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet ActivityIndicator = /** @class */ (() => {\n    class ActivityIndicator extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {\n                timer: new Animated.Value(0),\n                fade: new Animated.Value(!this.props.animating && this.props.hidesWhenStopped ? 0 : 1),\n            };\n            this.rotation = undefined;\n            this.startRotation = () => {\n                const { fade, timer } = this.state;\n                const { scale } = this.props.theme.animation;\n                // Show indicator\n                Animated.timing(fade, {\n                    duration: 200 * scale,\n                    toValue: 1,\n                    isInteraction: false,\n                    useNativeDriver: true,\n                }).start();\n                // Circular animation in loop\n                if (this.rotation) {\n                    timer.setValue(0);\n                    // $FlowFixMe\n                    Animated.loop(this.rotation).start();\n                }\n            };\n            this.stopRotation = () => {\n                if (this.rotation) {\n                    this.rotation.stop();\n                }\n            };\n        }\n        componentDidMount() {\n            const { animating } = this.props;\n            const { timer } = this.state;\n            // Circular animation in loop\n            this.rotation = Animated.timing(timer, {\n                duration: DURATION,\n                easing: Easing.linear,\n                // Animated.loop does not work if useNativeDriver is true on web\n                useNativeDriver: Platform.OS !== 'web',\n                toValue: 1,\n                isInteraction: false,\n            });\n            if (animating) {\n                this.startRotation();\n            }\n        }\n        componentDidUpdate(prevProps) {\n            const { animating, hidesWhenStopped, theme: { animation: { scale }, }, } = this.props;\n            const { fade } = this.state;\n            if (animating !== prevProps.animating) {\n                if (animating) {\n                    this.startRotation();\n                }\n                else if (hidesWhenStopped) {\n                    // Hide indicator first and then stop rotation\n                    Animated.timing(fade, {\n                        duration: 200 * scale,\n                        toValue: 0,\n                        useNativeDriver: true,\n                        isInteraction: false,\n                    }).start(this.stopRotation.bind(this));\n                }\n                else {\n                    this.stopRotation();\n                }\n            }\n        }\n        render() {\n            const { fade, timer } = this.state;\n            const { \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            animating, color: indicatorColor, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            hidesWhenStopped, size: indicatorSize, style, theme, ...rest } = this.props;\n            const color = indicatorColor || theme.colors.primary;\n            const size = typeof indicatorSize === 'string'\n                ? indicatorSize === 'small'\n                    ? 24\n                    : 48\n                : indicatorSize\n                    ? indicatorSize\n                    : 24;\n            const frames = (60 * DURATION) / 1000;\n            const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n            const containerStyle = {\n                width: size,\n                height: size / 2,\n                overflow: 'hidden',\n            };\n            return (React.createElement(View, Object.assign({ style: [styles.container, style] }, rest),\n                React.createElement(Animated.View, { style: [{ width: size, height: size, opacity: fade }], collapsable: false }, [0, 1].map(index => {\n                    // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n                    const inputRange = Array.from(new Array(frames), (_, frameIndex) => frameIndex / (frames - 1));\n                    const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n                        let progress = (2 * frameIndex) / (frames - 1);\n                        const rotation = index ? +(360 - 15) : -(180 - 15);\n                        if (progress > 1.0) {\n                            progress = 2.0 - progress;\n                        }\n                        const direction = index ? -1 : +1;\n                        return `${direction * (180 - 30) * easing(progress) +\n                            rotation}deg`;\n                    });\n                    const layerStyle = {\n                        width: size,\n                        height: size,\n                        transform: [\n                            {\n                                rotate: timer.interpolate({\n                                    inputRange: [0, 1],\n                                    outputRange: [\n                                        `${0 + 30 + 15}deg`,\n                                        `${2 * 360 + 30 + 15}deg`,\n                                    ],\n                                }),\n                            },\n                        ],\n                    };\n                    const viewportStyle = {\n                        width: size,\n                        height: size,\n                        transform: [\n                            {\n                                translateY: index ? -size / 2 : 0,\n                            },\n                            {\n                                rotate: timer.interpolate({ inputRange, outputRange }),\n                            },\n                        ],\n                    };\n                    const offsetStyle = index ? { top: size / 2 } : null;\n                    const lineStyle = {\n                        width: size,\n                        height: size,\n                        borderColor: color,\n                        borderWidth: size / 10,\n                        borderRadius: size / 2,\n                    };\n                    return (React.createElement(Animated.View, { key: index, style: [styles.layer] },\n                        React.createElement(Animated.View, { style: layerStyle },\n                            React.createElement(Animated.View, { style: [containerStyle, offsetStyle], collapsable: false },\n                                React.createElement(Animated.View, { style: viewportStyle },\n                                    React.createElement(Animated.View, { style: containerStyle, collapsable: false },\n                                        React.createElement(Animated.View, { style: lineStyle })))))));\n                }))));\n        }\n    }\n    ActivityIndicator.defaultProps = {\n        animating: true,\n        size: 'small',\n        hidesWhenStopped: true,\n    };\n    return ActivityIndicator;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    layer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n});\nexport default withTheme(ActivityIndicator);\n"]}