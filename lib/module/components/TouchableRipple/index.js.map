{"version":3,"sources":["index.js"],"names":["React","TouchableWithoutFeedback","View","StyleSheet","color","withTheme","TouchableRipple","Component","constructor","arguments","handlePressIn","e","centered","rippleColor","onPressIn","theme","props","dark","colors","calculatedRippleColor","text","alpha","rgb","string","button","currentTarget","style","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","width","height","startX","nativeEvent","touches","pageX","startY","pageY","left","top","size","Math","min","max","container","document","createElement","setAttribute","Object","assign","position","pointerEvents","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","render","background","borderless","disabled","disabledProp","underlayColor","children","rest","onPress","styles","touchable","Children","only","defaultProps","supported","create"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TouchableWithoutFeedback, View, StyleSheet, } from 'react-native';\nimport color from 'color';\nimport { withTheme } from '../../core/theming';\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet TouchableRipple = /** @class */ (() => {\n    class TouchableRipple extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.handlePressIn = (e) => {\n                const { centered, rippleColor, onPressIn, theme } = this.props;\n                onPressIn?.(e);\n                const { dark, colors } = theme;\n                const calculatedRippleColor = rippleColor ||\n                    color(colors.text)\n                        .alpha(dark ? 0.32 : 0.2)\n                        .rgb()\n                        .string();\n                const button = e.currentTarget;\n                const style = window.getComputedStyle(button);\n                const dimensions = button.getBoundingClientRect();\n                let touchX;\n                let touchY;\n                if (centered) {\n                    touchX = dimensions.width / 2;\n                    touchY = dimensions.height / 2;\n                }\n                else {\n                    const startX = e.nativeEvent.touches\n                        ? e.nativeEvent.touches[0].pageX\n                        : e.pageX;\n                    const startY = e.nativeEvent.touches\n                        ? e.nativeEvent.touches[0].pageY\n                        : e.pageY;\n                    touchX = startX - dimensions.left;\n                    touchY = startY - dimensions.top;\n                }\n                // Get the size of the button to determine how big the ripple should be\n                const size = centered\n                    ? // If ripple is always centered, we don't need to make it too big\n                        Math.min(dimensions.width, dimensions.height) * 1.25\n                    : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n                        Math.max(dimensions.width, dimensions.height) * 2;\n                // Create a container for our ripple effect so we don't need to change the parent's style\n                const container = document.createElement('span');\n                container.setAttribute('data-paper-ripple', '');\n                Object.assign(container.style, {\n                    position: 'absolute',\n                    pointerEvents: 'none',\n                    top: '0',\n                    left: '0',\n                    right: '0',\n                    bottom: '0',\n                    borderTopLeftRadius: style.borderTopLeftRadius,\n                    borderTopRightRadius: style.borderTopRightRadius,\n                    borderBottomRightRadius: style.borderBottomRightRadius,\n                    borderBottomLeftRadius: style.borderBottomLeftRadius,\n                    overflow: centered ? 'visible' : 'hidden',\n                });\n                // Create span to show the ripple effect\n                const ripple = document.createElement('span');\n                Object.assign(ripple.style, {\n                    position: 'absolute',\n                    pointerEvents: 'none',\n                    backgroundColor: calculatedRippleColor,\n                    borderRadius: '50%',\n                    /* Transition configuration */\n                    transitionProperty: 'transform opacity',\n                    transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n                    transitionTimingFunction: 'linear',\n                    transformOrigin: 'center',\n                    /* We'll animate these properties */\n                    transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n                    opacity: '0.5',\n                    // Position the ripple where cursor was\n                    left: `${touchX}px`,\n                    top: `${touchY}px`,\n                    width: `${size}px`,\n                    height: `${size}px`,\n                });\n                // Finally, append it to DOM\n                container.appendChild(ripple);\n                button.appendChild(container);\n                // rAF runs in the same frame as the event handler\n                // Use double rAF to ensure the transition class is added in next frame\n                // This will make sure that the transition animation is triggered\n                requestAnimationFrame(() => {\n                    requestAnimationFrame(() => {\n                        Object.assign(ripple.style, {\n                            transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n                            opacity: '1',\n                        });\n                    });\n                });\n            };\n            this.handlePressOut = (e) => {\n                this.props.onPressOut && this.props.onPressOut(e);\n                const containers = e.currentTarget.querySelectorAll('[data-paper-ripple]');\n                requestAnimationFrame(() => {\n                    requestAnimationFrame(() => {\n                        containers.forEach(container => {\n                            // @ts-ignore\n                            const ripple = container.firstChild;\n                            // @ts-ignore\n                            Object.assign(ripple.style, {\n                                transitionDuration: '250ms',\n                                opacity: 0,\n                            });\n                            // Finally remove the span after the transition\n                            setTimeout(() => {\n                                // @ts-ignore\n                                const { parentNode } = container;\n                                if (parentNode) {\n                                    parentNode.removeChild(container);\n                                }\n                            }, 500);\n                        });\n                    });\n                });\n            };\n        }\n        render() {\n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            const { style, background, borderless, disabled: disabledProp, rippleColor, underlayColor, children, theme, ...rest } = this.props;\n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            const disabled = disabledProp || !this.props.onPress;\n            return (React.createElement(TouchableWithoutFeedback, Object.assign({}, rest, { onPressIn: this.handlePressIn, onPressOut: this.handlePressOut, disabled: disabled }),\n                React.createElement(View, { style: [styles.touchable, borderless && styles.borderless, style] }, React.Children.only(children))));\n        }\n    }\n    TouchableRipple.defaultProps = {\n        borderless: false,\n    };\n    /**\n     * Whether ripple effect is supported.\n     */\n    TouchableRipple.supported = true;\n    return TouchableRipple;\n})();\nconst styles = StyleSheet.create({\n    touchable: {\n        position: 'relative',\n    },\n    borderless: {\n        overflow: 'hidden',\n    },\n});\nexport default withTheme(TouchableRipple);\n"]}