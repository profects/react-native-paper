{"version":3,"sources":["Snackbar.js"],"names":["React","Animated","SafeAreaView","StyleSheet","Button","Surface","Text","withTheme","DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","Component","constructor","arguments","state","opacity","Value","hidden","props","visible","toggle","show","hide","hideTimeout","clearTimeout","setState","scale","theme","animation","timing","toValue","duration","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","onDismiss","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","children","action","style","wrapperStyle","rest","colors","roundness","createElement","pointerEvents","styles","wrapper","Object","assign","accessibilityLiveRegion","container","borderRadius","transform","interpolate","inputRange","outputRange","backgroundColor","onSurface","content","marginRight","color","surface","accessibilityLabel","onPress","button","accent","compact","mode","label","defaultProps","create","position","bottom","width","elevation","flexDirection","justifyContent","alignItems","margin","marginLeft","marginVertical","flexWrap","flex","marginHorizontal"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, SafeAreaView, StyleSheet, } from 'react-native';\nimport Button from './Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default use onSurface color from theme\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _onToggleSnackBar = () => this.setState(state => ({ visible: !state.visible }));\n *\n *   _onDismissSnackBar = () => this.setState({ visible: false });\n *\n *   render() {\n *     const { visible } = this.state;\n *\n *     return (\n *       <View style={styles.container}>\n *         <Button\n *           onPress={this._onToggleSnackBar}\n *         >\n *           {visible ? 'Hide' : 'Show'}\n *         </Button>\n *         <Snackbar\n *           visible={visible}\n *           onDismiss={this._onDismissSnackBar}\n *           action={{\n *             label: 'Undo',\n *             onPress: () => {\n *               // Do something\n *             },\n *           }}\n *         >\n *           Hey there! I'm a Snackbar.\n *         </Snackbar>\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n * ```\n */\nlet Snackbar = /** @class */ (() => {\n    class Snackbar extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {\n                opacity: new Animated.Value(0.0),\n                hidden: !this.props.visible,\n            };\n            this.toggle = () => {\n                if (this.props.visible) {\n                    this.show();\n                }\n                else {\n                    this.hide();\n                }\n            };\n            this.show = () => {\n                if (this.hideTimeout) {\n                    clearTimeout(this.hideTimeout);\n                }\n                this.setState({\n                    hidden: false,\n                });\n                const { scale } = this.props.theme.animation;\n                Animated.timing(this.state.opacity, {\n                    toValue: 1,\n                    duration: 200 * scale,\n                    useNativeDriver: true,\n                }).start(({ finished }) => {\n                    if (finished) {\n                        const { duration } = this.props;\n                        const isInfinity = duration === Number.POSITIVE_INFINITY ||\n                            duration === Number.NEGATIVE_INFINITY;\n                        if (finished && !isInfinity) {\n                            this.hideTimeout = setTimeout(this.props.onDismiss, duration);\n                        }\n                    }\n                });\n            };\n            this.hide = () => {\n                if (this.hideTimeout) {\n                    clearTimeout(this.hideTimeout);\n                }\n                const { scale } = this.props.theme.animation;\n                Animated.timing(this.state.opacity, {\n                    toValue: 0,\n                    duration: 100 * scale,\n                    useNativeDriver: true,\n                }).start(({ finished }) => {\n                    if (finished) {\n                        this.setState({ hidden: true });\n                    }\n                });\n            };\n        }\n        componentDidMount() {\n            if (this.props.visible) {\n                this.show();\n            }\n        }\n        componentDidUpdate(prevProps) {\n            if (prevProps.visible !== this.props.visible) {\n                this.toggle();\n            }\n        }\n        componentWillUnmount() {\n            if (this.hideTimeout) {\n                clearTimeout(this.hideTimeout);\n            }\n        }\n        render() {\n            const { children, visible, action, onDismiss, theme, style, wrapperStyle, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            duration, ...rest } = this.props;\n            const { colors, roundness } = theme;\n            if (this.state.hidden) {\n                return null;\n            }\n            return (React.createElement(SafeAreaView, { pointerEvents: \"box-none\", style: [styles.wrapper, wrapperStyle] },\n                React.createElement(Surface, Object.assign({ pointerEvents: \"box-none\", accessibilityLiveRegion: \"polite\", style: [\n                        styles.container,\n                        {\n                            borderRadius: roundness,\n                            opacity: this.state.opacity,\n                            transform: [\n                                {\n                                    scale: visible\n                                        ? this.state.opacity.interpolate({\n                                            inputRange: [0, 1],\n                                            outputRange: [0.9, 1],\n                                        })\n                                        : 1,\n                                },\n                            ],\n                        },\n                        { backgroundColor: colors.onSurface },\n                        style,\n                    ] }, rest),\n                    React.createElement(Text, { style: [\n                            styles.content,\n                            { marginRight: action ? 0 : 16, color: colors.surface },\n                        ] }, children),\n                    action ? (React.createElement(Button, { accessibilityLabel: action.accessibilityLabel, onPress: () => {\n                            action.onPress();\n                            onDismiss();\n                        }, style: styles.button, color: colors.accent, compact: true, mode: \"text\" }, action.label)) : null)));\n        }\n    }\n    /**\n     * Show the Snackbar for a short duration.\n     */\n    Snackbar.DURATION_SHORT = DURATION_SHORT;\n    /**\n     * Show the Snackbar for a medium duration.\n     */\n    Snackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n    /**\n     * Show the Snackbar for a long duration.\n     */\n    Snackbar.DURATION_LONG = DURATION_LONG;\n    Snackbar.defaultProps = {\n        duration: DURATION_MEDIUM,\n    };\n    return Snackbar;\n})();\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n    },\n    container: {\n        elevation: 6,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        margin: 8,\n        borderRadius: 4,\n    },\n    content: {\n        marginLeft: 16,\n        marginVertical: 14,\n        flexWrap: 'wrap',\n        flex: 1,\n    },\n    button: {\n        marginHorizontal: 8,\n        marginVertical: 6,\n    },\n});\nexport default withTheme(Snackbar);\n"]}