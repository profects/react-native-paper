{"version":3,"sources":["DrawerItem.js"],"names":["color","React","View","StyleSheet","Text","Icon","TouchableRipple","withTheme","DrawerItem","Component","render","props","icon","label","active","theme","style","onPress","accessibilityLabel","rest","colors","roundness","backgroundColor","primary","alpha","rgb","string","contentColor","text","font","fonts","medium","labelMargin","createElement","Object","assign","styles","container","borderRadius","borderless","delayPressIn","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","wrapper","source","size","numberOfLines","marginLeft","displayName","create","marginHorizontal","marginVertical","flexDirection","alignItems","padding","marginRight"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet DrawerItem = /** @class */ (() => {\n    class DrawerItem extends React.Component {\n        render() {\n            const { icon, label, active, theme, style, onPress, accessibilityLabel, ...rest } = this.props;\n            const { colors, roundness } = theme;\n            const backgroundColor = active\n                ? color(colors.primary)\n                    .alpha(0.12)\n                    .rgb()\n                    .string()\n                : 'transparent';\n            const contentColor = active\n                ? colors.primary\n                : color(colors.text)\n                    .alpha(0.68)\n                    .rgb()\n                    .string();\n            const font = theme.fonts.medium;\n            const labelMargin = icon ? 32 : 0;\n            return (React.createElement(View, Object.assign({}, rest, { style: [\n                    styles.container,\n                    { backgroundColor, borderRadius: roundness },\n                    style,\n                ] }),\n                React.createElement(TouchableRipple, { borderless: true, delayPressIn: 0, onPress: onPress, style: { borderRadius: roundness }, accessibilityTraits: active ? ['button', 'selected'] : 'button', accessibilityComponentType: \"button\", accessibilityRole: \"button\", accessibilityStates: active ? ['selected'] : [], accessibilityLabel: accessibilityLabel },\n                    React.createElement(View, { style: styles.wrapper },\n                        icon ? (React.createElement(Icon, { source: icon, size: 24, color: contentColor })) : null,\n                        React.createElement(Text, { numberOfLines: 1, style: [\n                                styles.label,\n                                {\n                                    color: contentColor,\n                                    ...font,\n                                    marginLeft: labelMargin,\n                                },\n                            ] }, label)))));\n        }\n    }\n    DrawerItem.displayName = 'Drawer.Item';\n    return DrawerItem;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        marginHorizontal: 10,\n        marginVertical: 4,\n    },\n    wrapper: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 8,\n    },\n    label: {\n        marginRight: 32,\n    },\n});\nexport default withTheme(DrawerItem);\n"]}