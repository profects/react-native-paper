{"version":3,"sources":["DrawerItem.js"],"names":["DrawerItem","props","icon","label","active","theme","style","onPress","accessibilityLabel","rest","colors","roundness","backgroundColor","primary","alpha","rgb","string","contentColor","text","font","fonts","medium","labelMargin","React","createElement","View","styles","container","borderRadius","TouchableRipple","borderless","delayPressIn","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","wrapper","Icon","source","size","color","Text","numberOfLines","marginLeft","Component","displayName","StyleSheet","create","marginHorizontal","marginVertical","flexDirection","alignItems","padding","marginRight"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet DrawerItem = /** @class */ (() => {\n    class DrawerItem extends React.Component {\n        render() {\n            const { icon, label, active, theme, style, onPress, accessibilityLabel, ...rest } = this.props;\n            const { colors, roundness } = theme;\n            const backgroundColor = active\n                ? color(colors.primary)\n                    .alpha(0.12)\n                    .rgb()\n                    .string()\n                : 'transparent';\n            const contentColor = active\n                ? colors.primary\n                : color(colors.text)\n                    .alpha(0.68)\n                    .rgb()\n                    .string();\n            const font = theme.fonts.medium;\n            const labelMargin = icon ? 32 : 0;\n            return (React.createElement(View, Object.assign({}, rest, { style: [\n                    styles.container,\n                    { backgroundColor, borderRadius: roundness },\n                    style,\n                ] }),\n                React.createElement(TouchableRipple, { borderless: true, delayPressIn: 0, onPress: onPress, style: { borderRadius: roundness }, accessibilityTraits: active ? ['button', 'selected'] : 'button', accessibilityComponentType: \"button\", accessibilityRole: \"button\", accessibilityStates: active ? ['selected'] : [], accessibilityLabel: accessibilityLabel },\n                    React.createElement(View, { style: styles.wrapper },\n                        icon ? (React.createElement(Icon, { source: icon, size: 24, color: contentColor })) : null,\n                        React.createElement(Text, { numberOfLines: 1, style: [\n                                styles.label,\n                                {\n                                    color: contentColor,\n                                    ...font,\n                                    marginLeft: labelMargin,\n                                },\n                            ] }, label)))));\n        }\n    }\n    DrawerItem.displayName = 'Drawer.Item';\n    return DrawerItem;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        marginHorizontal: 10,\n        marginVertical: 4,\n    },\n    wrapper: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 8,\n    },\n    label: {\n        marginRight: 32,\n    },\n});\nexport default withTheme(DrawerItem);\n"]}