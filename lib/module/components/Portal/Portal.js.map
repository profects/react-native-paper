{"version":3,"sources":["Portal.js"],"names":["React","PortalConsumer","PortalHost","PortalContext","Provider","SettingsProvider","Consumer","SettingsConsumer","ThemeProvider","withTheme","Portal","Component","render","children","theme","props","createElement","settings","manager","value","Host"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,IAAqBC,aAArB,QAA0C,cAA1C;AACA,SAASC,QAAQ,IAAIC,gBAArB,EAAuCC,QAAQ,IAAIC,gBAAnD,QAA4E,qBAA5E;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,oBAAzC;AACA;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAIC,MAAM;AAAG;AAAc,CAAC,MAAM;AAC9B,QAAMA,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AACjCC,IAAAA,MAAM,GAAG;AACL,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAsB,KAAKC,KAAjC;AACA,0BAAQf,KAAK,CAACgB,aAAN,CAAoBT,gBAApB,EAAsC,IAAtC,EAA4CU,QAAQ,iBAAKjB,KAAK,CAACgB,aAAN,CAAoBb,aAAa,CAACG,QAAlC,EAA4C,IAA5C,EAAkDY,OAAO,iBAAKlB,KAAK,CAACgB,aAAN,CAAoBf,cAApB,EAAoC;AAAEiB,QAAAA,OAAO,EAAEA;AAAX,OAApC,eAC3HlB,KAAK,CAACgB,aAAN,CAAoBX,gBAApB,EAAsC;AAAEc,QAAAA,KAAK,EAAEF;AAAT,OAAtC,eACIjB,KAAK,CAACgB,aAAN,CAAoBR,aAApB,EAAmC;AAAEM,QAAAA,KAAK,EAAEA;AAAT,OAAnC,EAAqDD,QAArD,CADJ,CAD2H,CAA9D,CAAzD,CAAR;AAGH;;AANgC,GADP,CAS9B;;;AACAH,EAAAA,MAAM,CAACU,IAAP,GAAclB,UAAd;AACA,SAAOQ,MAAP;AACH,CAZ0B,GAA3B;;AAaA,eAAeD,SAAS,CAACC,MAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext } from './PortalHost';\nimport { Provider as SettingsProvider, Consumer as SettingsConsumer, } from '../../core/settings';\nimport { ThemeProvider, withTheme } from '../../core/theming';\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal>\n *         <Text>This is rendered at a different place</Text>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nlet Portal = /** @class */ (() => {\n    class Portal extends React.Component {\n        render() {\n            const { children, theme } = this.props;\n            return (React.createElement(SettingsConsumer, null, settings => (React.createElement(PortalContext.Consumer, null, manager => (React.createElement(PortalConsumer, { manager: manager },\n                React.createElement(SettingsProvider, { value: settings },\n                    React.createElement(ThemeProvider, { theme: theme }, children))))))));\n        }\n    }\n    // @component ./PortalHost.tsx\n    Portal.Host = PortalHost;\n    return Portal;\n})();\nexport default withTheme(Portal);\n"]}