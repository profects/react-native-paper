{"version":3,"sources":["PortalHost.js"],"names":["React","View","StyleSheet","PortalManager","PortalContext","createContext","PortalHost","Component","constructor","arguments","setManager","manager","mount","children","key","nextKey","queue","push","type","update","op","index","findIndex","o","unmount","componentDidMount","length","action","pop","render","createElement","Provider","value","style","styles","container","collapsable","pointerEvents","props","ref","displayName","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport PortalManager from './PortalManager';\nexport const PortalContext = React.createContext(null);\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nlet PortalHost = /** @class */ (() => {\n    class PortalHost extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.setManager = (manager) => {\n                this.manager = manager;\n            };\n            this.mount = (children) => {\n                const key = this.nextKey++;\n                if (this.manager) {\n                    this.manager.mount(key, children);\n                }\n                else {\n                    this.queue.push({ type: 'mount', key, children });\n                }\n                return key;\n            };\n            this.update = (key, children) => {\n                if (this.manager) {\n                    this.manager.update(key, children);\n                }\n                else {\n                    const op = { type: 'mount', key, children };\n                    const index = this.queue.findIndex(o => o.type === 'mount' || (o.type === 'update' && o.key === key));\n                    if (index > -1) {\n                        // @ts-ignore\n                        this.queue[index] = op;\n                    }\n                    else {\n                        this.queue.push(op);\n                    }\n                }\n            };\n            this.unmount = (key) => {\n                if (this.manager) {\n                    this.manager.unmount(key);\n                }\n                else {\n                    this.queue.push({ type: 'unmount', key });\n                }\n            };\n            this.nextKey = 0;\n            this.queue = [];\n        }\n        componentDidMount() {\n            const manager = this.manager;\n            const queue = this.queue;\n            while (queue.length && manager) {\n                const action = queue.pop();\n                if (action) {\n                    // eslint-disable-next-line default-case\n                    switch (action.type) {\n                        case 'mount':\n                            manager.mount(action.key, action.children);\n                            break;\n                        case 'update':\n                            manager.update(action.key, action.children);\n                            break;\n                        case 'unmount':\n                            manager.unmount(action.key);\n                            break;\n                    }\n                }\n            }\n        }\n        render() {\n            return (React.createElement(PortalContext.Provider, { value: {\n                    mount: this.mount,\n                    update: this.update,\n                    unmount: this.unmount,\n                } },\n                React.createElement(View, { style: styles.container, collapsable: false, pointerEvents: \"box-none\" }, this.props.children),\n                React.createElement(PortalManager, { ref: this.setManager })));\n        }\n    }\n    PortalHost.displayName = 'Portal.Host';\n    return PortalHost;\n})();\nexport default PortalHost;\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});\n"]}