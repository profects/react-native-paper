{"version":3,"sources":["Chip.js"],"names":["Chip","arguments","state","elevation","Animated","Value","handlePressIn","scale","props","theme","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","mode","children","icon","avatar","selected","disabled","accessibilityLabel","onPress","onLongPress","onClose","textStyle","style","testID","selectedColor","rest","dark","colors","StyleSheet","flatten","backgroundColor","surface","borderRadius","borderColor","undefined","white","black","alpha","rgb","string","textColor","text","iconColor","selectedBackgroundColor","lighten","darken","underlayColor","fade","accessibilityTraits","accessibilityStates","push","React","createElement","Surface","styles","container","Platform","OS","TouchableRipple","borderless","delayPressIn","onPressIn","onPressOut","accessibilityComponentType","accessibilityRole","View","content","avatarWrapper","opacity","isValidElement","cloneElement","avatarSelected","Icon","source","color","size","Text","numberOfLines","fonts","regular","marginRight","marginLeft","TouchableWithoutFeedback","Component","defaultProps","create","borderWidth","hairlineWidth","borderStyle","flexDirection","alignItems","paddingHorizontal","padding","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","position","top","left"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, Platform, StyleSheet, TouchableWithoutFeedback, View, } from 'react-native';\nimport color from 'color';\nimport Icon from './Icon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport TouchableRipple from './TouchableRipple';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\n/**\n * Chips can be used to display entities in small blocks.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/chip-1.png\" />\n *     <figcaption>Flat chip</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/chip-2.png\" />\n *     <figcaption>Outlined chip</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet Chip = /** @class */ (() => {\n    class Chip extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {\n                elevation: new Animated.Value(0),\n            };\n            this.handlePressIn = () => {\n                const { scale } = this.props.theme.animation;\n                Animated.timing(this.state.elevation, {\n                    toValue: 4,\n                    duration: 200 * scale,\n                    useNativeDriver: false,\n                }).start();\n            };\n            this.handlePressOut = () => {\n                const { scale } = this.props.theme.animation;\n                Animated.timing(this.state.elevation, {\n                    toValue: 0,\n                    duration: 150 * scale,\n                    useNativeDriver: false,\n                }).start();\n            };\n        }\n        render() {\n            const { mode, children, icon, avatar, selected, disabled, accessibilityLabel, onPress, onLongPress, onClose, textStyle, style, theme, testID, selectedColor, ...rest } = this.props;\n            const { dark, colors } = theme;\n            const { backgroundColor = mode === 'outlined'\n                ? colors.surface\n                : dark\n                    ? '#383838'\n                    : '#ebebeb', borderRadius = 16, } = StyleSheet.flatten(style) || {};\n            const borderColor = mode === 'outlined'\n                ? color(selectedColor !== undefined\n                    ? selectedColor\n                    : color(dark ? white : black))\n                    .alpha(0.29)\n                    .rgb()\n                    .string()\n                : backgroundColor;\n            const textColor = disabled\n                ? colors.disabled\n                : color(selectedColor !== undefined ? selectedColor : colors.text)\n                    .alpha(0.87)\n                    .rgb()\n                    .string();\n            const iconColor = disabled\n                ? colors.disabled\n                : color(selectedColor !== undefined ? selectedColor : colors.text)\n                    .alpha(0.54)\n                    .rgb()\n                    .string();\n            const selectedBackgroundColor = (dark\n                ? color(backgroundColor).lighten(mode === 'outlined' ? 0.2 : 0.4)\n                : color(backgroundColor).darken(mode === 'outlined' ? 0.08 : 0.2))\n                .rgb()\n                .string();\n            const underlayColor = selectedColor\n                ? color(selectedColor)\n                    .fade(0.5)\n                    .rgb()\n                    .string()\n                : selectedBackgroundColor;\n            const accessibilityTraits = ['button'];\n            const accessibilityStates = [];\n            if (selected) {\n                accessibilityTraits.push('selected');\n                accessibilityStates.push('selected');\n            }\n            if (disabled) {\n                accessibilityTraits.push('disabled');\n                accessibilityStates.push('disabled');\n            }\n            return (React.createElement(Surface, Object.assign({ style: [\n                    styles.container,\n                    {\n                        elevation: Platform.OS === 'android' ? this.state.elevation : 0,\n                        backgroundColor: selected\n                            ? selectedBackgroundColor\n                            : backgroundColor,\n                        borderColor,\n                        borderRadius,\n                    },\n                    style,\n                ] }, rest),\n                React.createElement(TouchableRipple, { borderless: true, delayPressIn: 0, style: { borderRadius }, onPress: onPress, onLongPress: onLongPress, onPressIn: this.handlePressIn, onPressOut: this.handlePressOut, underlayColor: underlayColor, disabled: disabled, accessibilityLabel: accessibilityLabel, accessibilityTraits: accessibilityTraits, accessibilityComponentType: \"button\", accessibilityRole: \"button\", accessibilityStates: accessibilityStates, testID: testID },\n                    React.createElement(View, { style: styles.content },\n                        avatar && !icon ? (React.createElement(View, { style: [styles.avatarWrapper, disabled && { opacity: 0.26 }] }, React.isValidElement(avatar)\n                            ? /* $FlowFixMe */\n                                React.cloneElement(avatar, {\n                                    /* $FlowFixMe */\n                                    style: [styles.avatar, avatar.props.style],\n                                })\n                            : avatar)) : null,\n                        icon || selected ? (React.createElement(View, { style: [\n                                styles.icon,\n                                avatar ? [styles.avatar, styles.avatarSelected] : null,\n                            ] },\n                            React.createElement(Icon, { source: icon || 'check', color: avatar ? white : iconColor, size: 18 }))) : null,\n                        React.createElement(Text, { numberOfLines: 1, style: [\n                                styles.text,\n                                {\n                                    ...theme.fonts.regular,\n                                    color: textColor,\n                                    marginRight: onClose ? 4 : 8,\n                                    marginLeft: avatar || icon || selected ? 4 : 8,\n                                },\n                                textStyle,\n                            ] }, children),\n                        onClose ? (React.createElement(TouchableWithoutFeedback, { onPress: onClose, accessibilityTraits: \"button\", accessibilityComponentType: \"button\" },\n                            React.createElement(View, { style: styles.icon },\n                                React.createElement(Icon, { source: \"close-circle\", size: 16, color: iconColor })))) : null))));\n        }\n    }\n    Chip.defaultProps = {\n        mode: 'flat',\n        disabled: false,\n        selected: false,\n    };\n    return Chip;\n})();\nconst styles = StyleSheet.create({\n    container: {\n        borderWidth: StyleSheet.hairlineWidth,\n        borderStyle: 'solid',\n    },\n    content: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: 4,\n    },\n    icon: {\n        padding: 4,\n    },\n    text: {\n        minHeight: 24,\n        lineHeight: 24,\n        textAlignVertical: 'center',\n        marginVertical: 4,\n    },\n    avatar: {\n        width: 24,\n        height: 24,\n        borderRadius: 12,\n    },\n    avatarWrapper: {\n        marginRight: 4,\n    },\n    avatarSelected: {\n        position: 'absolute',\n        top: 4,\n        left: 4,\n        backgroundColor: 'rgba(0, 0, 0, .29)',\n    },\n});\nexport default withTheme(Chip);\n"]}