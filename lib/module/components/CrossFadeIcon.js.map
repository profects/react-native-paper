{"version":3,"sources":["CrossFadeIcon.js"],"names":["React","Animated","StyleSheet","View","Icon","isValidIcon","isEqualIcon","withTheme","CrossFadeIcon","Component","constructor","arguments","state","currentIcon","props","source","previousIcon","fade","Value","getDerivedStateFromProps","nextProps","nextState","componentDidUpdate","_","prevState","theme","animation","scale","setValue","timing","duration","toValue","useNativeDriver","start","render","color","size","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","createElement","style","styles","content","height","width","icon","opacity","transform","rotate","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon } from './Icon';\nimport { withTheme } from '../core/theming';\nclass CrossFadeIcon extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            currentIcon: this.props.source,\n            previousIcon: null,\n            fade: new Animated.Value(1),\n        };\n    }\n    static getDerivedStateFromProps(nextProps, nextState) {\n        if (nextState.currentIcon === nextProps.source) {\n            return null;\n        }\n        return {\n            currentIcon: nextProps.source,\n            previousIcon: nextState.currentIcon,\n        };\n    }\n    componentDidUpdate(_, prevState) {\n        const { previousIcon } = this.state;\n        const { theme: { animation: { scale }, }, } = this.props;\n        if (!isValidIcon(previousIcon) ||\n            isEqualIcon(previousIcon, prevState.previousIcon)) {\n            return;\n        }\n        this.state.fade.setValue(1);\n        Animated.timing(this.state.fade, {\n            duration: scale * 200,\n            toValue: 0,\n            useNativeDriver: false,\n        }).start();\n    }\n    render() {\n        const { color, size } = this.props;\n        const opacityPrev = this.state.fade;\n        const opacityNext = this.state.previousIcon\n            ? this.state.fade.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n            })\n            : 1;\n        const rotatePrev = this.state.fade.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['-90deg', '0deg'],\n        });\n        const rotateNext = this.state.previousIcon\n            ? this.state.fade.interpolate({\n                inputRange: [0, 1],\n                outputRange: ['0deg', '-180deg'],\n            })\n            : '0deg';\n        return (React.createElement(View, { style: [\n                styles.content,\n                {\n                    height: size,\n                    width: size,\n                },\n            ] },\n            this.state.previousIcon ? (React.createElement(Animated.View, { style: [\n                    styles.icon,\n                    {\n                        opacity: opacityPrev,\n                        transform: [{ rotate: rotatePrev }],\n                    },\n                ] },\n                React.createElement(Icon, { source: this.state.previousIcon, size: size, color: color }))) : null,\n            React.createElement(Animated.View, { style: [\n                    styles.icon,\n                    {\n                        opacity: opacityNext,\n                        transform: [{ rotate: rotateNext }],\n                    },\n                ] },\n                React.createElement(Icon, { source: this.state.currentIcon, size: size, color: color }))));\n    }\n}\nexport default withTheme(CrossFadeIcon);\nconst styles = StyleSheet.create({\n    content: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    icon: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n});\n"]}