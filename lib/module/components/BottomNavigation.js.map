{"version":3,"sources":["BottomNavigation.js"],"names":["React","View","Animated","TouchableWithoutFeedback","StyleSheet","Platform","Keyboard","SafeAreaView","color","overlay","Icon","Surface","Badge","TouchableRipple","Text","black","white","withTheme","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Touchable","route","_0","style","children","borderless","centered","rippleColor","rest","supported","createElement","Object","assign","SceneComponent","PureComponent","render","props","component","BottomNavigation","Component","constructor","handleKeyboardShow","scale","theme","animation","setState","keyboard","timing","state","visible","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToCurrentIndex","shifting","isShifting","navigationState","routes","index","ripple","setValue","parallel","map","_","i","tabs","finished","tab","offsets","forEach","offset","handleLayout","e","layout","height","width","nativeEvent","measured","handleTabPress","onTabPress","onIndexChange","event","defaultPrevented","preventDefault","jumpTo","key","findIndex","length","Value","touch","current","previous","loaded","SceneMap","scenes","getDerivedStateFromProps","nextProps","prevState","nextState","includes","componentDidMount","OS","addListener","componentDidUpdate","prevProps","componentWillUnmount","removeListener","renderScene","renderIcon","renderLabel","renderTouchable","getLabelText","title","getBadge","badge","getColor","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","sceneAnimationEnabled","colors","dark","isDarkTheme","mode","backgroundColor","customBackground","elevation","flatten","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","tabWidth","rippleSize","styles","container","content","background","focused","opacity","top","pointerEvents","accessibilityElementsHidden","importantForAccessibility","absoluteFill","collapsable","removeClippedSubviews","bar","transform","translateY","position","onLayout","barContent","forceInset","bottom","items","maxWidth","left","borderRadius","active","activeOpacity","inactiveOpacity","onPress","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","item","iconContainer","iconWrapper","source","icon","size","badgeContainer","right","String","labelContainer","labelWrapper","label","defaultProps","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","marginHorizontal","alignSelf","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport * as React from 'react';\nimport { View, Animated, TouchableWithoutFeedback, StyleSheet, Platform, Keyboard, } from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport color from 'color';\nimport overlay from '../styles/overlay';\nimport Icon from './Icon';\nimport Surface from './Surface';\nimport Badge from './Badge';\nimport TouchableRipple from './TouchableRipple';\nimport Text from './Typography/Text';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = 9999;\nconst Touchable = ({ route: _0, style, children, borderless, centered, rippleColor, ...rest }) => TouchableRipple.supported ? (React.createElement(TouchableRipple, Object.assign({}, rest, { borderless: borderless, centered: centered, rippleColor: rippleColor, style: style }), children)) : (React.createElement(TouchableWithoutFeedback, Object.assign({}, rest),\n    React.createElement(View, { style: style }, children)));\nclass SceneComponent extends React.PureComponent {\n    render() {\n        const { component, ...rest } = this.props;\n        return React.createElement(component, rest);\n    }\n}\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tab-navigator](https://github.com/react-navigation/react-navigation-material-bottom-tab-navigator).\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     index: 0,\n *     routes: [\n *       { key: 'music', title: 'Music', icon: 'queue-music' },\n *       { key: 'albums', title: 'Albums', icon: 'album' },\n *       { key: 'recents', title: 'Recents', icon: 'history' },\n *     ],\n *   };\n *\n *   _handleIndexChange = index => this.setState({ index });\n *\n *   _renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   render() {\n *     return (\n *       <BottomNavigation\n *         navigationState={this.state}\n *         onIndexChange={this._handleIndexChange}\n *         renderScene={this._renderScene}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nlet BottomNavigation = /** @class */ (() => {\n    class BottomNavigation extends React.Component {\n        constructor(props) {\n            super(props);\n            this.handleKeyboardShow = () => {\n                const { scale } = this.props.theme.animation;\n                this.setState({ keyboard: true }, () => Animated.timing(this.state.visible, {\n                    toValue: 0,\n                    duration: 150 * scale,\n                    useNativeDriver: true,\n                }).start());\n            };\n            this.handleKeyboardHide = () => {\n                const { scale } = this.props.theme.animation;\n                Animated.timing(this.state.visible, {\n                    toValue: 1,\n                    duration: 100 * scale,\n                    useNativeDriver: true,\n                }).start(() => {\n                    this.setState({ keyboard: false });\n                });\n            };\n            this.animateToCurrentIndex = () => {\n                const shifting = this.isShifting();\n                const { navigationState, theme: { animation: { scale }, }, } = this.props;\n                const { routes, index } = navigationState;\n                // Reset the ripple to avoid glitch if it's currently animating\n                this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n                Animated.parallel([\n                    Animated.timing(this.state.ripple, {\n                        toValue: 1,\n                        duration: shifting ? 400 * scale : 0,\n                        useNativeDriver: true,\n                    }),\n                    ...routes.map((_, i) => Animated.timing(this.state.tabs[i], {\n                        toValue: i === index ? 1 : 0,\n                        duration: shifting ? 150 * scale : 0,\n                        useNativeDriver: true,\n                    })),\n                ]).start(({ finished }) => {\n                    // Workaround a bug in native animations where this is reset after first animation\n                    this.state.tabs.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n                    // Update the index to change bar's bacground color and then hide the ripple\n                    this.state.index.setValue(index);\n                    this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n                    if (finished) {\n                        // Position all inactive screens offscreen to save memory usage\n                        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n                        this.state.offsets.forEach((offset, i) => {\n                            if (i === index) {\n                                offset.setValue(0);\n                            }\n                            else {\n                                offset.setValue(1);\n                            }\n                        });\n                    }\n                });\n            };\n            this.handleLayout = (e) => {\n                const { layout } = this.state;\n                const { height, width } = e.nativeEvent.layout;\n                if (height === layout.height && width === layout.width) {\n                    return;\n                }\n                this.setState({\n                    layout: {\n                        height,\n                        width,\n                        measured: true,\n                    },\n                });\n            };\n            this.handleTabPress = (index) => {\n                const { navigationState, onTabPress, onIndexChange } = this.props;\n                const event = {\n                    route: navigationState.routes[index],\n                    defaultPrevented: false,\n                    preventDefault: () => {\n                        event.defaultPrevented = true;\n                    },\n                };\n                onTabPress?.(event);\n                if (event.defaultPrevented) {\n                    return;\n                }\n                if (index !== navigationState.index) {\n                    onIndexChange(index);\n                }\n            };\n            this.jumpTo = (key) => {\n                const index = this.props.navigationState.routes.findIndex(route => route.key === key);\n                this.props.onIndexChange(index);\n            };\n            this.isShifting = () => typeof this.props.shifting === 'boolean'\n                ? this.props.shifting\n                : this.props.navigationState.routes.length > 3;\n            const { index } = this.props.navigationState;\n            this.state = {\n                visible: new Animated.Value(1),\n                tabs: [],\n                offsets: [],\n                index: new Animated.Value(index),\n                ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n                touch: new Animated.Value(MIN_RIPPLE_SCALE),\n                layout: { height: 0, width: 0, measured: false },\n                current: index,\n                previous: 0,\n                loaded: [index],\n                keyboard: false,\n            };\n        }\n        /**\n         * Function which takes a map of route keys to components.\n         * Pure components are used to minmize re-rendering of the pages.\n         * This drastically improves the animation performance.\n         */\n        static SceneMap(scenes) {\n            return ({ route, jumpTo, }) => (React.createElement(SceneComponent, { key: route.key, component: scenes[route.key ? route.key : ''], route: route, jumpTo: jumpTo }));\n        }\n        static getDerivedStateFromProps(nextProps, prevState) {\n            const { index, routes } = nextProps.navigationState;\n            // Re-create animated values if routes have been added/removed\n            // Preserve previous animated values if they exist, so we don't break animations\n            const tabs = routes.map(\n            // focused === 1, unfocused === 0\n            (_, i) => prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0));\n            const offsets = routes.map(\n            // offscreen === 1, normal === 0\n            (_, i) => prevState.offsets[i] || new Animated.Value(i === index ? 0 : 1));\n            const nextState = {\n                tabs,\n                offsets,\n            };\n            if (index !== prevState.current) {\n                /* $FlowFixMe */\n                Object.assign(nextState, {\n                    // Store the current index in state so that we can later check if the index has changed\n                    current: index,\n                    previous: prevState.current,\n                    // Set the current tab to be loaded if it was not loaded before\n                    loaded: prevState.loaded.includes(index)\n                        ? prevState.loaded\n                        : [...prevState.loaded, index],\n                });\n            }\n            return nextState;\n        }\n        componentDidMount() {\n            // Workaround for native animated bug in react-native@^0.57\n            // Context: https://github.com/callstack/react-native-paper/pull/637\n            this.animateToCurrentIndex();\n            if (Platform.OS === 'ios') {\n                Keyboard.addListener('keyboardWillShow', this.handleKeyboardShow);\n                Keyboard.addListener('keyboardWillHide', this.handleKeyboardHide);\n            }\n            else {\n                Keyboard.addListener('keyboardDidShow', this.handleKeyboardShow);\n                Keyboard.addListener('keyboardDidHide', this.handleKeyboardHide);\n            }\n        }\n        componentDidUpdate(prevProps) {\n            if (prevProps.navigationState.index === this.props.navigationState.index) {\n                return;\n            }\n            // Reset offsets of previous and current tabs before animation\n            this.state.offsets.forEach((offset, i) => {\n                if (i === this.props.navigationState.index ||\n                    i === prevProps.navigationState.index) {\n                    offset.setValue(0);\n                }\n            });\n            this.animateToCurrentIndex();\n        }\n        componentWillUnmount() {\n            if (Platform.OS === 'ios') {\n                Keyboard.removeListener('keyboardWillShow', this.handleKeyboardShow);\n                Keyboard.removeListener('keyboardWillHide', this.handleKeyboardHide);\n            }\n            else {\n                Keyboard.removeListener('keyboardDidShow', this.handleKeyboardShow);\n                Keyboard.removeListener('keyboardDidHide', this.handleKeyboardHide);\n            }\n        }\n        render() {\n            const { navigationState, renderScene, renderIcon, renderLabel, renderTouchable = (props) => React.createElement(Touchable, Object.assign({}, props)), getLabelText = ({ route }) => route.title, getBadge = ({ route }) => route.badge, getColor = ({ route }) => route.color, getAccessibilityLabel = ({ route }) => route.accessibilityLabel, getTestID = ({ route }) => route.testID, activeColor, inactiveColor, keyboardHidesNavigationBar, barStyle, labeled, style, theme, sceneAnimationEnabled, } = this.props;\n            const { layout, loaded, index, visible, ripple, keyboard, tabs, offsets, } = this.state;\n            const { routes } = navigationState;\n            const { colors, dark: isDarkTheme, mode } = theme;\n            const shifting = this.isShifting();\n            const { backgroundColor: customBackground, elevation = 4 } = StyleSheet.flatten(barStyle) || {};\n            const approxBackgroundColor = customBackground\n                ? customBackground\n                : isDarkTheme && mode === 'adaptive'\n                    ? overlay(elevation, colors.surface)\n                    : colors.primary;\n            const backgroundColor = shifting\n                ? index.interpolate({\n                    inputRange: routes.map((_, i) => i),\n                    //@ts-ignore\n                    outputRange: routes.map(route => getColor({ route }) || approxBackgroundColor),\n                })\n                : approxBackgroundColor;\n            const isDark = !color(approxBackgroundColor).isLight();\n            const textColor = isDark ? white : black;\n            const activeTintColor = typeof activeColor !== 'undefined' ? activeColor : textColor;\n            const inactiveTintColor = typeof inactiveColor !== 'undefined'\n                ? inactiveColor\n                : color(textColor)\n                    .alpha(0.5)\n                    .rgb()\n                    .string();\n            const touchColor = color(activeColor || activeTintColor)\n                .alpha(0.12)\n                .rgb()\n                .string();\n            const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n            const maxTabBarWidth = maxTabWidth * routes.length;\n            const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n            const tabWidth = tabBarWidth / routes.length;\n            const rippleSize = layout.width / 4;\n            return (React.createElement(View, { style: [styles.container, style] },\n                React.createElement(View, { style: [styles.content, { backgroundColor: colors.background }] }, routes.map((route, index) => {\n                    if (!loaded.includes(index)) {\n                        // Don't render a screen if we've never navigated to it\n                        return null;\n                    }\n                    const focused = navigationState.index === index;\n                    const opacity = sceneAnimationEnabled !== false ? tabs[index] : focused ? 1 : 0;\n                    const top = offsets[index].interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0, FAR_FAR_AWAY],\n                    });\n                    return (React.createElement(Animated.View, { key: route.key, pointerEvents: focused ? 'auto' : 'none', accessibilityElementsHidden: !focused, importantForAccessibility: focused ? 'auto' : 'no-hide-descendants', style: [StyleSheet.absoluteFill, { opacity }], collapsable: false, removeClippedSubviews: \n                        // On iOS, set removeClippedSubviews to true only when not focused\n                        // This is an workaround for a bug where the clipped view never re-appears\n                        Platform.OS === 'ios' ? navigationState.index !== index : true },\n                        React.createElement(Animated.View, { style: [styles.content, { top }] }, renderScene({\n                            route,\n                            jumpTo: this.jumpTo,\n                        }))));\n                })),\n                React.createElement(Surface, { style: [\n                        styles.bar,\n                        keyboardHidesNavigationBar\n                            ? {\n                                // When the keyboard is shown, slide down the navigation bar\n                                transform: [\n                                    {\n                                        translateY: visible.interpolate({\n                                            inputRange: [0, 1],\n                                            outputRange: [layout.height, 0],\n                                        }),\n                                    },\n                                ],\n                                // Absolutely position the navigation bar so that the content is below it\n                                // This is needed to avoid gap at bottom when the navigation bar is hidden\n                                position: keyboard ? 'absolute' : null,\n                            }\n                            : null,\n                        barStyle,\n                    ], pointerEvents: layout.measured\n                        ? keyboardHidesNavigationBar && keyboard\n                            ? 'none'\n                            : 'auto'\n                        : 'none', onLayout: this.handleLayout },\n                    React.createElement(Animated.View, { style: [styles.barContent, { backgroundColor }] },\n                        React.createElement(SafeAreaView, { forceInset: { top: 'never', bottom: 'always' }, style: [styles.items, { maxWidth: maxTabBarWidth }] },\n                            shifting ? (React.createElement(Animated.View, { pointerEvents: \"none\", style: [\n                                    styles.ripple,\n                                    {\n                                        // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                                        // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                                        top: (BAR_HEIGHT - rippleSize) / 2,\n                                        left: tabWidth * (navigationState.index + 0.5) -\n                                            rippleSize / 2,\n                                        height: rippleSize,\n                                        width: rippleSize,\n                                        borderRadius: rippleSize / 2,\n                                        backgroundColor: getColor({\n                                            route: routes[navigationState.index],\n                                        }),\n                                        transform: [\n                                            {\n                                                // Scale to twice the size  to ensure it covers the whole navigation bar\n                                                scale: ripple.interpolate({\n                                                    inputRange: [0, 1],\n                                                    outputRange: [0, 8],\n                                                }),\n                                            },\n                                        ],\n                                        opacity: ripple.interpolate({\n                                            inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                                            outputRange: [0, 0, 1, 1],\n                                        }),\n                                    },\n                                ] })) : null,\n                            routes.map((route, index) => {\n                                const focused = navigationState.index === index;\n                                const active = tabs[index];\n                                // Scale the label up\n                                const scale = labeled && shifting\n                                    ? active.interpolate({\n                                        inputRange: [0, 1],\n                                        outputRange: [0.5, 1],\n                                    })\n                                    : 1;\n                                // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n                                const translateY = labeled\n                                    ? shifting\n                                        ? active.interpolate({\n                                            inputRange: [0, 1],\n                                            outputRange: [7, 0],\n                                        })\n                                        : 0\n                                    : 7;\n                                // We render the active icon and label on top of inactive ones and cross-fade them on change.\n                                // This trick gives the illusion that we are animating between active and inactive colors.\n                                // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n                                const activeOpacity = active;\n                                const inactiveOpacity = active.interpolate({\n                                    inputRange: [0, 1],\n                                    outputRange: [1, 0],\n                                });\n                                const badge = getBadge({ route });\n                                return renderTouchable({\n                                    key: route.key,\n                                    route,\n                                    borderless: true,\n                                    centered: true,\n                                    rippleColor: touchColor,\n                                    onPress: () => this.handleTabPress(index),\n                                    testID: getTestID({ route }),\n                                    accessibilityLabel: getAccessibilityLabel({ route }),\n                                    accessibilityTraits: focused\n                                        ? ['button', 'selected']\n                                        : 'button',\n                                    accessibilityComponentType: 'button',\n                                    accessibilityRole: 'button',\n                                    accessibilityStates: ['selected'],\n                                    style: styles.item,\n                                    children: (React.createElement(View, { pointerEvents: \"none\" },\n                                        React.createElement(Animated.View, { style: [\n                                                styles.iconContainer,\n                                                { transform: [{ translateY }] },\n                                            ] },\n                                            React.createElement(Animated.View, { style: [\n                                                    styles.iconWrapper,\n                                                    { opacity: activeOpacity },\n                                                ] }, renderIcon ? (renderIcon({\n                                                route,\n                                                focused: true,\n                                                color: activeTintColor,\n                                            })) : (React.createElement(Icon, { source: route.icon, color: activeTintColor, size: 24 }))),\n                                            React.createElement(Animated.View, { style: [\n                                                    styles.iconWrapper,\n                                                    { opacity: inactiveOpacity },\n                                                ] }, renderIcon ? (renderIcon({\n                                                route,\n                                                focused: false,\n                                                color: inactiveTintColor,\n                                            })) : (React.createElement(Icon, { source: route.icon, color: inactiveTintColor, size: 24 }))),\n                                            React.createElement(View, { style: [\n                                                    styles.badgeContainer,\n                                                    {\n                                                        right: (badge != null && typeof badge !== 'boolean'\n                                                            ? String(badge).length * -2\n                                                            : 0) - 2,\n                                                    },\n                                                ] }, typeof badge === 'boolean' ? (React.createElement(Badge, { visible: badge, size: 8 })) : (React.createElement(Badge, { visible: badge != null, size: 16 }, badge)))),\n                                        labeled ? (React.createElement(Animated.View, { style: [\n                                                styles.labelContainer,\n                                                { transform: [{ scale }] },\n                                            ] },\n                                            React.createElement(Animated.View, { style: [\n                                                    styles.labelWrapper,\n                                                    { opacity: activeOpacity },\n                                                ] }, renderLabel ? (renderLabel({\n                                                route,\n                                                focused: true,\n                                                color: activeTintColor,\n                                            })) : (React.createElement(Text, { style: [\n                                                    styles.label,\n                                                    { color: activeTintColor },\n                                                ] }, getLabelText({ route })))),\n                                            shifting ? null : (React.createElement(Animated.View, { style: [\n                                                    styles.labelWrapper,\n                                                    { opacity: inactiveOpacity },\n                                                ] }, renderLabel ? (renderLabel({\n                                                route,\n                                                focused: false,\n                                                color: inactiveTintColor,\n                                            })) : (React.createElement(Text, { style: [\n                                                    styles.label,\n                                                    { color: inactiveTintColor },\n                                                ] }, getLabelText({ route }))))))) : (React.createElement(View, { style: styles.labelContainer })))),\n                                });\n                            }))))));\n        }\n    }\n    BottomNavigation.defaultProps = {\n        labeled: true,\n        keyboardHidesNavigationBar: true,\n    };\n    return BottomNavigation;\n})();\nexport default withTheme(BottomNavigation);\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        overflow: 'hidden',\n    },\n    content: {\n        flex: 1,\n    },\n    bar: {\n        left: 0,\n        right: 0,\n        bottom: 0,\n        elevation: 4,\n    },\n    barContent: {\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    items: {\n        flexDirection: 'row',\n        width: '100%',\n    },\n    item: {\n        flex: 1,\n        // Top padding is 6 and bottom padding is 10\n        // The extra 4dp bottom padding is offset by label's height\n        paddingVertical: 6,\n    },\n    ripple: {\n        position: 'absolute',\n    },\n    iconContainer: {\n        height: 24,\n        width: 24,\n        marginTop: 2,\n        marginHorizontal: 12,\n        alignSelf: 'center',\n    },\n    iconWrapper: {\n        ...StyleSheet.absoluteFillObject,\n        alignItems: 'center',\n    },\n    labelContainer: {\n        height: 16,\n        paddingBottom: 2,\n    },\n    labelWrapper: {\n        ...StyleSheet.absoluteFillObject,\n    },\n    label: {\n        fontSize: 12,\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n        ...(Platform.OS === 'web'\n            ? {\n                whiteSpace: 'nowrap',\n            }\n            : null),\n    },\n    badgeContainer: {\n        position: 'absolute',\n        left: 0,\n        top: -2,\n    },\n});\n"]}