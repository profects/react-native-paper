{"version":3,"sources":["MenuItem.js"],"names":["MenuItem","props","icon","title","description","disabled","onPress","theme","style","testID","titleStyle","disabledColor","dark","white","black","alpha","rgb","string","titleColor","colors","text","iconColor","descriptionColor","React","createElement","TouchableRipple","styles","container","View","row","item","pointerEvents","Icon","source","size","color","content","widthWithIcon","Text","numberOfLines","Component","displayName","minWidth","maxWidth","iconWidth","StyleSheet","create","paddingHorizontal","height","justifyContent","flexDirection","width","fontSize","marginHorizontal"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, } from 'react-native';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item icon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item icon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item icon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item icon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item icon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nlet MenuItem = /** @class */ (() => {\n    class MenuItem extends React.Component {\n        render() {\n            const { icon, title, description, disabled, onPress, theme, style, testID, titleStyle, } = this.props;\n            const disabledColor = color(theme.dark ? white : black)\n                .alpha(0.32)\n                .rgb()\n                .string();\n            const titleColor = disabled\n                ? disabledColor\n                : color(theme.colors.text)\n                    .alpha(0.87)\n                    .rgb()\n                    .string();\n            const iconColor = disabled\n                ? disabledColor\n                : color(theme.colors.text)\n                    .alpha(0.54)\n                    .rgb()\n                    .string();\n            const descriptionColor = disabled\n                ? disabledColor\n                : color(theme.colors.text)\n                    .alpha(0.54)\n                    .rgb()\n                    .string();\n            return (React.createElement(TouchableRipple, { style: [styles.container, style], onPress: onPress, disabled: disabled, testID: testID },\n                React.createElement(View, { style: styles.row },\n                    icon ? (React.createElement(View, { style: [styles.item, styles.icon], pointerEvents: \"box-none\" },\n                        React.createElement(Icon, { source: icon, size: 24, color: iconColor }))) : null,\n                    React.createElement(View, { style: [\n                            styles.item,\n                            styles.content,\n                            icon ? styles.widthWithIcon : null,\n                        ], pointerEvents: \"none\" },\n                        React.createElement(Text, { numberOfLines: 1, style: [styles.title, { color: titleColor }, titleStyle] }, title),\n                        description ? (React.createElement(Text, { numberOfLines: 3, style: [\n                                styles.description,\n                                {\n                                    color: descriptionColor,\n                                },\n                            ] }, description)) : null))));\n        }\n    }\n    MenuItem.displayName = 'Menu.Item';\n    return MenuItem;\n})();\nconst minWidth = 112;\nconst maxWidth = 300;\nconst iconWidth = 40;\nconst styles = StyleSheet.create({\n    container: {\n        paddingHorizontal: 8,\n        minWidth,\n        maxWidth,\n        height: 48,\n        justifyContent: 'center',\n    },\n    row: {\n        flexDirection: 'row',\n    },\n    icon: {\n        width: iconWidth,\n    },\n    title: {\n        fontSize: 16,\n    },\n    description: {},\n    item: {\n        marginHorizontal: 8,\n    },\n    content: {\n        justifyContent: 'center',\n        minWidth: minWidth - 16,\n        maxWidth: maxWidth - 16,\n    },\n    widthWithIcon: {\n        maxWidth: maxWidth - (iconWidth + 48),\n    },\n});\nexport default withTheme(MenuItem);\n// @component-docs ignore-next-line\nexport { MenuItem };\n"]}