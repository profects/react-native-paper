{"version":3,"sources":["Menu.js"],"names":["React","Platform","StyleSheet","Animated","BackHandler","Dimensions","Easing","I18nManager","TouchableWithoutFeedback","View","ScrollView","findNodeHandle","withTheme","Portal","Surface","MenuItem","APPROX_STATUSBAR_HEIGHT","SCREEN_INDENT","ANIMATION_DURATION","EASING","bezier","Menu","Component","constructor","arguments","state","rendered","props","visible","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Value","scaleAnimation","ValueXY","x","y","anchor","menu","isAnchorCoord","isValidElement","measureMenuLayout","Promise","resolve","measureInWindow","measureAnchorLayout","updateVisibility","show","hide","isBrowser","OS","global","focusFirstDOMNode","el","node","focusableNode","querySelector","focus","handleDismiss","onDismiss","handleKeypress","e","key","attachListeners","addEventListener","document","removeListeners","removeEventListener","windowLayout","get","all","requestAnimationFrame","setState","animation","theme","parallel","timing","toValue","duration","scale","easing","useNativeDriver","start","finished","setValue","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","componentWillUnmount","render","contentStyle","style","children","statusBarHeight","additionalVerticalValue","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","push","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","roundness","positionStyle","isRTL","createElement","ref","collapsable","onPress","absoluteFill","accessibilityViewIsModal","styles","wrapper","pointerEvents","shadowMenuContainer","Fragment","Item","defaultProps","create","position","paddingVertical","elevation"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCC,WAAzC,EAAsDC,UAAtD,EAAkEC,MAAlE,EAA0EC,WAA1E,EAAuFC,wBAAvF,EAAiHC,IAAjH,EAAuHC,UAAvH,EAAmIC,cAAnI,QAA0J,cAA1J;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,uBAAT,QAAwC,iBAAxC,C,CACA;;AACA,MAAMC,aAAa,GAAG,CAAtB,C,CACA;;AACA,MAAMC,kBAAkB,GAAG,GAA3B,C,CACA;;AACA,MAAMC,MAAM,GAAGb,MAAM,CAACc,MAAP,CAAc,GAAd,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAAf;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,IAAIC,IAAI;AAAG;AAAc,CAAC,MAAM;AAC5B,QAAMA,IAAN,SAAmBrB,KAAK,CAACsB,SAAzB,CAAmC;AAC/BC,IAAAA,WAAW,GAAG;AACV,YAAM,GAAGC,SAAT;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,OADZ;AAETC,QAAAA,GAAG,EAAE,CAFI;AAGTC,QAAAA,IAAI,EAAE,CAHG;AAITC,QAAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAJH;AAKTC,QAAAA,YAAY,EAAE;AAAEF,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,MAAM,EAAE;AAApB,SALL;AAMTE,QAAAA,gBAAgB,EAAE,IAAIhC,QAAQ,CAACiC,KAAb,CAAmB,CAAnB,CANT;AAOTC,QAAAA,cAAc,EAAE,IAAIlC,QAAQ,CAACmC,OAAb,CAAqB;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX,SAArB;AAPP,OAAb;AASA,WAAKC,MAAL,GAAc,IAAd;AACA,WAAKC,IAAL,GAAY,IAAZ;;AACA,WAAKC,aAAL,GAAqB,MAAM,eAAC3C,KAAK,CAAC4C,cAAN,CAAqB,KAAKjB,KAAL,CAAWc,MAAhC,CAA5B;;AACA,WAAKI,iBAAL,GAAyB,MAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAClD,YAAI,KAAKL,IAAT,EAAe;AACX,eAAKA,IAAL,CAAUM,eAAV,CAA0B,CAACT,CAAD,EAAIC,CAAJ,EAAOR,KAAP,EAAcC,MAAd,KAAyB;AAC/Cc,YAAAA,OAAO,CAAC;AAAER,cAAAA,CAAF;AAAKC,cAAAA,CAAL;AAAQR,cAAAA,KAAR;AAAeC,cAAAA;AAAf,aAAD,CAAP;AACH,WAFD;AAGH;AACJ,OAN8B,CAA/B;;AAOA,WAAKgB,mBAAL,GAA2B,MAAM,IAAIH,OAAJ,CAAYC,OAAO,IAAI;AACpD,cAAM;AAAEN,UAAAA;AAAF,YAAa,KAAKd,KAAxB;;AACA,YAAI,KAAKgB,aAAL,EAAJ,EAA0B;AACtB;AACAI,UAAAA,OAAO,CAAC;AAAER,YAAAA,CAAC,EAAEE,MAAM,CAACF,CAAZ;AAAeC,YAAAA,CAAC,EAAEC,MAAM,CAACD,CAAzB;AAA4BR,YAAAA,KAAK,EAAE,CAAnC;AAAsCC,YAAAA,MAAM,EAAE;AAA9C,WAAD,CAAP;AACA;AACH;;AACD,YAAI,KAAKQ,MAAT,EAAiB;AACb,eAAKA,MAAL,CAAYO,eAAZ,CAA4B,CAACT,CAAD,EAAIC,CAAJ,EAAOR,KAAP,EAAcC,MAAd,KAAyB;AACjDc,YAAAA,OAAO,CAAC;AAAER,cAAAA,CAAF;AAAKC,cAAAA,CAAL;AAAQR,cAAAA,KAAR;AAAeC,cAAAA;AAAf,aAAD,CAAP;AACH,WAFD;AAGH;AACJ,OAZgC,CAAjC;;AAaA,WAAKiB,gBAAL,GAAwB,YAAY;AAChC;AACA;AACA,cAAMJ,OAAO,CAACC,OAAR,EAAN;;AACA,YAAI,KAAKpB,KAAL,CAAWC,OAAf,EAAwB;AACpB,eAAKuB,IAAL;AACH,SAFD,MAGK;AACD,eAAKC,IAAL;AACH;AACJ,OAVD;;AAWA,WAAKC,SAAL,GAAiB,MAAMpD,QAAQ,CAACqD,EAAT,KAAgB,KAAhB,IAAyB,cAAcC,MAA9D;;AACA,WAAKC,iBAAL,GAA0BC,EAAD,IAAQ;AAC7B,YAAIA,EAAE,IAAI,KAAKJ,SAAL,EAAV,EAA4B;AACxB;AACA;AACA;AACA,gBAAMK,IAAI,GAAG/C,cAAc,CAAC8C,EAAD,CAA3B;AACA,gBAAME,aAAa,GAAGD,IAAI,CAACE,aAAL,EACtB;AACA,oFAFsB,CAAtB;AAGAD,UAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEE,KAAf;AACH;AACJ,OAXD;;AAYA,WAAKC,aAAL,GAAqB,MAAM;AACvB,YAAI,KAAKnC,KAAL,CAAWC,OAAf,EAAwB;AACpB,eAAKD,KAAL,CAAWoC,SAAX;AACH;;AACD,eAAO,IAAP;AACH,OALD;;AAMA,WAAKC,cAAL,GAAuBC,CAAD,IAAO;AACzB,YAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACpB,eAAKvC,KAAL,CAAWoC,SAAX;AACH;AACJ,OAJD;;AAKA,WAAKI,eAAL,GAAuB,MAAM;AACzB/D,QAAAA,WAAW,CAACgE,gBAAZ,CAA6B,mBAA7B,EAAkD,KAAKN,aAAvD;AACAzD,QAAAA,UAAU,CAAC+D,gBAAX,CAA4B,QAA5B,EAAsC,KAAKN,aAA3C;AACA,aAAKT,SAAL,MAAoBgB,QAAQ,CAACD,gBAAT,CAA0B,OAA1B,EAAmC,KAAKJ,cAAxC,CAApB;AACH,OAJD;;AAKA,WAAKM,eAAL,GAAuB,MAAM;AACzBlE,QAAAA,WAAW,CAACmE,mBAAZ,CAAgC,mBAAhC,EAAqD,KAAKT,aAA1D;AACAzD,QAAAA,UAAU,CAACkE,mBAAX,CAA+B,QAA/B,EAAyC,KAAKT,aAA9C;AACA,aAAKT,SAAL,MACIgB,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKP,cAA3C,CADJ;AAEH,OALD;;AAMA,WAAKb,IAAL,GAAY,YAAY;AACpB,cAAMqB,YAAY,GAAGnE,UAAU,CAACoE,GAAX,CAAe,QAAf,CAArB;AACA,cAAM,CAAC1C,UAAD,EAAaG,YAAb,IAA6B,MAAMY,OAAO,CAAC4B,GAAR,CAAY,CACjD,KAAK7B,iBAAL,EADiD,EAEjD,KAAKI,mBAAL,EAFiD,CAAZ,CAAzC,CAFoB,CAMpB;AACA;AACA;AACA;AACA;AACA;;AACA,YAAI,CAACuB,YAAY,CAACxC,KAAd,IACA,CAACwC,YAAY,CAACvC,MADd,IAEA,CAACF,UAAU,CAACC,KAFZ,IAGA,CAACD,UAAU,CAACE,MAHZ,IAIC,CAACC,YAAY,CAACF,KAAd,IAAuB,CAAC,KAAKW,aAAL,EAJzB,IAKC,CAACT,YAAY,CAACD,MAAd,IAAwB,CAAC,KAAKU,aAAL,EAL9B,EAKqD;AACjDgC,UAAAA,qBAAqB,CAAC,KAAKxB,IAAN,CAArB;AACA;AACH;;AACD,aAAKyB,QAAL,CAAc,OAAO;AACjB9C,UAAAA,IAAI,EAAEI,YAAY,CAACK,CADF;AAEjBV,UAAAA,GAAG,EAAEK,YAAY,CAACM,CAFD;AAGjBN,UAAAA,YAAY,EAAE;AACVD,YAAAA,MAAM,EAAEC,YAAY,CAACD,MADX;AAEVD,YAAAA,KAAK,EAAEE,YAAY,CAACF;AAFV,WAHG;AAOjBD,UAAAA,UAAU,EAAE;AACRC,YAAAA,KAAK,EAAED,UAAU,CAACC,KADV;AAERC,YAAAA,MAAM,EAAEF,UAAU,CAACE;AAFX;AAPK,SAAP,CAAd,EAWI,MAAM;AACN,eAAKkC,eAAL;AACA,gBAAM;AAAEU,YAAAA;AAAF,cAAgB,KAAKlD,KAAL,CAAWmD,KAAjC;AACA3E,UAAAA,QAAQ,CAAC4E,QAAT,CAAkB,CACd5E,QAAQ,CAAC6E,MAAT,CAAgB,KAAKvD,KAAL,CAAWY,cAA3B,EAA2C;AACvC4C,YAAAA,OAAO,EAAE;AAAE1C,cAAAA,CAAC,EAAER,UAAU,CAACC,KAAhB;AAAuBQ,cAAAA,CAAC,EAAET,UAAU,CAACE;AAArC,aAD8B;AAEvCiD,YAAAA,QAAQ,EAAEhE,kBAAkB,GAAG2D,SAAS,CAACM,KAFF;AAGvCC,YAAAA,MAAM,EAAEjE,MAH+B;AAIvCkE,YAAAA,eAAe,EAAE;AAJsB,WAA3C,CADc,EAOdlF,QAAQ,CAAC6E,MAAT,CAAgB,KAAKvD,KAAL,CAAWU,gBAA3B,EAA6C;AACzC8C,YAAAA,OAAO,EAAE,CADgC;AAEzCC,YAAAA,QAAQ,EAAEhE,kBAAkB,GAAG2D,SAAS,CAACM,KAFA;AAGzCC,YAAAA,MAAM,EAAEjE,MAHiC;AAIzCkE,YAAAA,eAAe,EAAE;AAJwB,WAA7C,CAPc,CAAlB,EAaGC,KAbH,CAaS,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAkB;AACvB,gBAAIA,QAAJ,EAAc;AACV,mBAAK/B,iBAAL,CAAuB,KAAKd,IAA5B;AACH;AACJ,WAjBD;AAkBH,SAhCD;AAiCH,OAtDD;;AAuDA,WAAKU,IAAL,GAAY,MAAM;AACd,aAAKkB,eAAL;AACA,cAAM;AAAEO,UAAAA;AAAF,YAAgB,KAAKlD,KAAL,CAAWmD,KAAjC;AACA3E,QAAAA,QAAQ,CAAC6E,MAAT,CAAgB,KAAKvD,KAAL,CAAWU,gBAA3B,EAA6C;AACzC8C,UAAAA,OAAO,EAAE,CADgC;AAEzCC,UAAAA,QAAQ,EAAEhE,kBAAkB,GAAG2D,SAAS,CAACM,KAFA;AAGzCC,UAAAA,MAAM,EAAEjE,MAHiC;AAIzCkE,UAAAA,eAAe,EAAE;AAJwB,SAA7C,EAKGC,KALH,CAKSC,QAAQ,IAAI;AACjB,cAAIA,QAAJ,EAAc;AACV,iBAAKX,QAAL,CAAc;AAAE7C,cAAAA,UAAU,EAAE;AAAEC,gBAAAA,KAAK,EAAE,CAAT;AAAYC,gBAAAA,MAAM,EAAE;AAApB,eAAd;AAAuCP,cAAAA,QAAQ,EAAE;AAAjD,aAAd;AACA,iBAAKD,KAAL,CAAWY,cAAX,CAA0BmD,QAA1B,CAAmC;AAAEjD,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,CAAC,EAAE;AAAX,aAAnC;AACA,iBAAKgB,iBAAL,CAAuB,KAAKf,MAA5B;AACH;AACJ,SAXD;AAYH,OAfD;AAgBH;;AACD,WAAOgD,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAClD,UAAID,SAAS,CAAC9D,OAAV,IAAqB,CAAC+D,SAAS,CAACjE,QAApC,EAA8C;AAC1C,eAAO;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAP;AACH;;AACD,aAAO,IAAP;AACH;;AACDkE,IAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAIA,SAAS,CAACjE,OAAV,KAAsB,KAAKD,KAAL,CAAWC,OAArC,EAA8C;AAC1C,aAAKsB,gBAAL;AACH;AACJ;;AACD4C,IAAAA,oBAAoB,GAAG;AACnB,WAAKxB,eAAL;AACH;;AACDyB,IAAAA,MAAM,GAAG;AACL,YAAM;AAAEnE,QAAAA,OAAF;AAAWa,QAAAA,MAAX;AAAmBuD,QAAAA,YAAnB;AAAiCC,QAAAA,KAAjC;AAAwCC,QAAAA,QAAxC;AAAkDpB,QAAAA,KAAlD;AAAyDqB,QAAAA,eAAzD;AAA0EpC,QAAAA;AAA1E,UAAyF,KAAKpC,KAApG;AACA,YAAM;AAAED,QAAAA,QAAF;AAAYK,QAAAA,UAAZ;AAAwBG,QAAAA,YAAxB;AAAsCC,QAAAA,gBAAtC;AAAwDE,QAAAA;AAAxD,UAA4E,KAAKZ,KAAvF;AACA,UAAI;AAAEK,QAAAA,IAAF;AAAQD,QAAAA;AAAR,UAAgB,KAAKJ,KAAzB,CAHK,CAIL;;AACA,YAAM2E,uBAAuB,GAAGnG,QAAQ,CAACoG,MAAT,CAAgB;AAC5CC,QAAAA,OAAO,EAAEH,eADmC;AAE5CI,QAAAA,OAAO,EAAE;AAFmC,OAAhB,CAAhC;AAIA,YAAMC,eAAe,GAAG,CACpB;AACIC,QAAAA,MAAM,EAAEpE,cAAc,CAACE,CAAf,CAAiBmE,WAAjB,CAA6B;AACjCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI5E,UAAU,CAACC,KAAf,CADqB;AAEjC4E,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFoB,SAA7B;AADZ,OADoB,EAOpB;AACIC,QAAAA,MAAM,EAAExE,cAAc,CAACG,CAAf,CAAiBkE,WAAjB,CAA6B;AACjCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI5E,UAAU,CAACE,MAAf,CADqB;AAEjC2E,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFoB,SAA7B;AADZ,OAPoB,CAAxB;AAcA,YAAMpC,YAAY,GAAGnE,UAAU,CAACoE,GAAX,CAAe,QAAf,CAArB,CAvBK,CAwBL;;AACA,YAAMqC,kBAAkB,GAAG,EAA3B,CAzBK,CA0BL;;AACA,UAAIhF,IAAI,IAAI0C,YAAY,CAACxC,KAAb,GAAqBD,UAAU,CAACC,KAAhC,GAAwCf,aAApD,EAAmE;AAC/D6F,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACpBC,UAAAA,UAAU,EAAE3E,cAAc,CAACE,CAAf,CAAiBmE,WAAjB,CAA6B;AACrCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI5E,UAAU,CAACC,KAAf,CADyB;AAErC4E,YAAAA,WAAW,EAAE,CAAC,EAAE7E,UAAU,CAACC,KAAX,GAAmB,CAArB,CAAD,EAA0B,CAA1B;AAFwB,WAA7B;AADQ,SAAxB,EAD+D,CAO/D;;AACA,YAAIF,IAAI,GAAGb,aAAX,EAA0B;AACtBa,UAAAA,IAAI,GAAGb,aAAP;AACH;AACJ,OAXD,MAYK;AACD6F,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACpBC,UAAAA,UAAU,EAAE3E,cAAc,CAACE,CAAf,CAAiBmE,WAAjB,CAA6B;AACrCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI5E,UAAU,CAACC,KAAf,CADyB;AAErC4E,YAAAA,WAAW,EAAE,CAAC7E,UAAU,CAACC,KAAX,GAAmB,CAApB,EAAuB,CAAvB;AAFwB,WAA7B;AADQ,SAAxB;AAMAF,QAAAA,IAAI,IAAII,YAAY,CAACF,KAAb,GAAqBD,UAAU,CAACC,KAAxC;AACA,cAAMiF,KAAK,GAAGnF,IAAI,GAAGC,UAAU,CAACC,KAAhC,CARC,CASD;;AACA,YAAIiF,KAAK,GAAGzC,YAAY,CAACxC,KAAb,GAAqBf,aAAjC,EAAgD;AAC5Ca,UAAAA,IAAI,GAAG0C,YAAY,CAACxC,KAAb,GAAqBf,aAArB,GAAqCc,UAAU,CAACC,KAAvD;AACH;AACJ,OApDI,CAqDL;AACA;;;AACA,UAAIkF,oBAAoB,GAAG,CAA3B,CAvDK,CAwDL;;AACA,WACA;AACArF,MAAAA,GAAG,IACC2C,YAAY,CAACvC,MAAb,GACIF,UAAU,CAACE,MADf,GAEIhB,aAFJ,GAGImF,uBAJR,IAKI;AACAvE,MAAAA,GAAG,IAAI2C,YAAY,CAACvC,MAAb,GAAsBJ,GARjC,EAQsC;AAClC;AACAqF,QAAAA,oBAAoB,GAChB1C,YAAY,CAACvC,MAAb,GAAsBJ,GAAtB,GAA4BZ,aAA5B,GAA4CmF,uBADhD;AAEH,OAZD,MAaK,KACL;AACAvE,MAAAA,GAAG,IACC2C,YAAY,CAACvC,MAAb,GACIF,UAAU,CAACE,MADf,GAEIhB,aAFJ,GAGImF,uBAJR,IAKI;AACAvE,MAAAA,GAAG,IAAI2C,YAAY,CAACvC,MAAb,GAAsBJ,GANjC,IAOI;AACAA,MAAAA,GAAG,IACCE,UAAU,CAACE,MAAX,GACIC,YAAY,CAACD,MADjB,GAEIhB,aAFJ,GAGImF,uBAdP,EAcgC;AACjC;AACAc,QAAAA,oBAAoB,GAChBrF,GAAG,GAAGK,YAAY,CAACD,MAAnB,GAA4BhB,aAA5B,GAA4CmF,uBADhD;AAEH,OAxFI,CAyFL;;;AACAc,MAAAA,oBAAoB,GAChBA,oBAAoB,GAAG1C,YAAY,CAACvC,MAAb,GAAsB,IAAIhB,aAAjD,GACMuD,YAAY,CAACvC,MAAb,GAAsB,IAAIhB,aADhC,GAEMiG,oBAHV,CA1FK,CA8FL;AACA;;AACA,WACA;AACArF,MAAAA,GAAG,IACC2C,YAAY,CAACvC,MAAb,GACIF,UAAU,CAACE,MADf,GAEIhB,aAFJ,GAGImF,uBAJR,IAKI;AACCvE,MAAAA,GAAG,IACA2C,YAAY,CAACvC,MAAb,GACIF,UAAU,CAACE,MADf,GAEIhB,aAFJ,GAGImF,uBAJP,IAKG;AACAvE,MAAAA,GAAG,IAAI2C,YAAY,CAACvC,MAAb,GAAsBJ,GAdrC,EAc2C;AACvCiF,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACpBI,UAAAA,UAAU,EAAE9E,cAAc,CAACG,CAAf,CAAiBkE,WAAjB,CAA6B;AACrCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI5E,UAAU,CAACE,MAAf,CADyB;AAErC2E,YAAAA,WAAW,EAAE,CAAC,EAAE,CAACM,oBAAoB,IAAInF,UAAU,CAACE,MAApC,IAA8C,CAAhD,CAAD,EAAqD,CAArD;AAFwB,WAA7B;AADQ,SAAxB,EADuC,CAOvC;;AACA,YAAIJ,GAAG,GAAGZ,aAAV,EAAyB;AACrBY,UAAAA,GAAG,GAAGZ,aAAN;AACH;AACJ,OAzBD,MA0BK;AACD6F,QAAAA,kBAAkB,CAACC,IAAnB,CAAwB;AACpBI,UAAAA,UAAU,EAAE9E,cAAc,CAACG,CAAf,CAAiBkE,WAAjB,CAA6B;AACrCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI5E,UAAU,CAACE,MAAf,CADyB;AAErC2E,YAAAA,WAAW,EAAE,CAAC,CAACM,oBAAoB,IAAInF,UAAU,CAACE,MAApC,IAA8C,CAA/C,EAAkD,CAAlD;AAFwB,WAA7B;AADQ,SAAxB;AAMAJ,QAAAA,GAAG,IAAIK,YAAY,CAACD,MAAb,IAAuBiF,oBAAoB,IAAInF,UAAU,CAACE,MAA1D,CAAP;AACA,cAAMmF,MAAM,GAAGvF,GAAG,IACbqF,oBAAoB,IAAInF,UAAU,CAACE,MADtB,CAAH,GAEXmE,uBAFJ,CARC,CAWD;;AACA,YAAIgB,MAAM,GAAG5C,YAAY,CAACvC,MAAb,GAAsBhB,aAAnC,EAAkD;AAC9CY,UAAAA,GAAG,GACCqF,oBAAoB,KAAK1C,YAAY,CAACvC,MAAb,GAAsB,IAAIhB,aAAnD,GACM,CAACA,aAAD,GAAiB,CADvB,GAEMuD,YAAY,CAACvC,MAAb,GACEF,UAAU,CAACE,MADb,GAEEhB,aAFF,GAGEmF,uBANZ;AAOH;AACJ;;AACD,YAAMiB,wBAAwB;AAC1BC,QAAAA,OAAO,EAAEnF,gBADiB;AAE1BoF,QAAAA,SAAS,EAAEf,eAFe;AAG1BgB,QAAAA,YAAY,EAAE1C,KAAK,CAAC2C;AAHM,SAItBP,oBAAoB,GAAG;AAAEjF,QAAAA,MAAM,EAAEiF;AAAV,OAAH,GAAsC,EAJpC,CAA9B;;AAMA,YAAMQ,aAAa;AACf7F,QAAAA,GAAG,EAAE,KAAKc,aAAL,KAAuBd,GAAvB,GAA6BA,GAAG,GAAGuE;AADzB,SAEX7F,WAAW,CAACoH,KAAZ,GAAoB;AAAEV,QAAAA,KAAK,EAAEnF;AAAT,OAApB,GAAsC;AAAEA,QAAAA;AAAF,OAF3B,CAAnB;;AAIA,0BAAQ9B,KAAK,CAAC4H,aAAN,CAAoBnH,IAApB,EAA0B;AAAEoH,QAAAA,GAAG,EAAEA,IAAG,IAAI;AACxC,eAAKpF,MAAL,GAAcoF,IAAd;AACH,SAF6B;AAE3BC,QAAAA,WAAW,EAAE;AAFc,OAA1B,EAGJ,KAAKnF,aAAL,KAAuB,IAAvB,GAA8BF,MAH1B,EAIJf,QAAQ,gBAAI1B,KAAK,CAAC4H,aAAN,CAAoB/G,MAApB,EAA4B,IAA5B,eACRb,KAAK,CAAC4H,aAAN,CAAoBpH,wBAApB,EAA8C;AAAEuH,QAAAA,OAAO,EAAEhE;AAAX,OAA9C,eACI/D,KAAK,CAAC4H,aAAN,CAAoBnH,IAApB,EAA0B;AAAEwF,QAAAA,KAAK,EAAE/F,UAAU,CAAC8H;AAApB,OAA1B,CADJ,CADQ,eAGRhI,KAAK,CAAC4H,aAAN,CAAoBnH,IAApB,EAA0B;AAAEoH,QAAAA,GAAG,EAAEA,KAAG,IAAI;AAChC,eAAKnF,IAAL,GAAYmF,KAAZ;AACH,SAFqB;AAEnBC,QAAAA,WAAW,EAAE,KAFM;AAECG,QAAAA,wBAAwB,EAAErG,OAF3B;AAEoCqE,QAAAA,KAAK,EAAE,CAACiC,MAAM,CAACC,OAAR,EAAiBT,aAAjB,EAAgCzB,KAAhC,CAF3C;AAEmFmC,QAAAA,aAAa,EAAExG,OAAO,GAAG,UAAH,GAAgB;AAFzH,OAA1B,eAGI5B,KAAK,CAAC4H,aAAN,CAAoBzH,QAAQ,CAACM,IAA7B,EAAmC;AAAEwF,QAAAA,KAAK,EAAE;AAAEsB,UAAAA,SAAS,EAAET;AAAb;AAAT,OAAnC,eACI9G,KAAK,CAAC4H,aAAN,CAAoB9G,OAApB,EAA6B;AAAEmF,QAAAA,KAAK,EAAE,CAC9BiC,MAAM,CAACG,mBADuB,EAE9BhB,wBAF8B,EAG9BrB,YAH8B;AAAT,OAA7B,EAIUkB,oBAAoB,iBAAKlH,KAAK,CAAC4H,aAAN,CAAoBlH,UAApB,EAAgC,IAAhC,EAAsCwF,QAAtC,CAA1B,iBAA+ElG,KAAK,CAAC4H,aAAN,CAAoB5H,KAAK,CAACsI,QAA1B,EAAoC,IAApC,EAA0CpC,QAA1C,CAJxF,CADJ,CAHJ,CAHQ,CAAJ,GAWuJ,IAf3J,CAAR;AAgBH;;AAjV8B,GADP,CAoV5B;;;AACA7E,EAAAA,IAAI,CAACkH,IAAL,GAAYxH,QAAZ;AACAM,EAAAA,IAAI,CAACmH,YAAL,GAAoB;AAChBrC,IAAAA,eAAe,EAAEnF;AADD,GAApB;AAGA,SAAOK,IAAP;AACH,CA1VwB,GAAzB;;AA2VA,MAAM6G,MAAM,GAAGhI,UAAU,CAACuI,MAAX,CAAkB;AAC7BN,EAAAA,OAAO,EAAE;AACLO,IAAAA,QAAQ,EAAE;AADL,GADoB;AAI7BL,EAAAA,mBAAmB,EAAE;AACjBf,IAAAA,OAAO,EAAE,CADQ;AAEjBqB,IAAAA,eAAe,EAAE,CAFA;AAGjBC,IAAAA,SAAS,EAAE;AAHM;AAJQ,CAAlB,CAAf;AAUA,eAAehI,SAAS,CAACS,IAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, Animated, BackHandler, Dimensions, Easing, I18nManager, TouchableWithoutFeedback, View, ScrollView, findNodeHandle, } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport MenuItem from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nlet Menu = /** @class */ (() => {\n    class Menu extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {\n                rendered: this.props.visible,\n                top: 0,\n                left: 0,\n                menuLayout: { width: 0, height: 0 },\n                anchorLayout: { width: 0, height: 0 },\n                opacityAnimation: new Animated.Value(0),\n                scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n            };\n            this.anchor = null;\n            this.menu = null;\n            this.isAnchorCoord = () => !React.isValidElement(this.props.anchor);\n            this.measureMenuLayout = () => new Promise(resolve => {\n                if (this.menu) {\n                    this.menu.measureInWindow((x, y, width, height) => {\n                        resolve({ x, y, width, height });\n                    });\n                }\n            });\n            this.measureAnchorLayout = () => new Promise(resolve => {\n                const { anchor } = this.props;\n                if (this.isAnchorCoord()) {\n                    // @ts-ignore\n                    resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n                    return;\n                }\n                if (this.anchor) {\n                    this.anchor.measureInWindow((x, y, width, height) => {\n                        resolve({ x, y, width, height });\n                    });\n                }\n            });\n            this.updateVisibility = async () => {\n                // Menu is rendered in Portal, which updates items asynchronously\n                // We need to do the same here so that the ref is up-to-date\n                await Promise.resolve();\n                if (this.props.visible) {\n                    this.show();\n                }\n                else {\n                    this.hide();\n                }\n            };\n            this.isBrowser = () => Platform.OS === 'web' && 'document' in global;\n            this.focusFirstDOMNode = (el) => {\n                if (el && this.isBrowser()) {\n                    // When in the browser, we want to focus the first focusable item on toggle\n                    // For example, when menu is shown, focus the first item in the menu\n                    // And when menu is dismissed, send focus back to the button to resume tabbing\n                    const node = findNodeHandle(el);\n                    const focusableNode = node.querySelector(\n                    // This is a rough list of selectors that can be focused\n                    'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n                    focusableNode?.focus();\n                }\n            };\n            this.handleDismiss = () => {\n                if (this.props.visible) {\n                    this.props.onDismiss();\n                }\n                return true;\n            };\n            this.handleKeypress = (e) => {\n                if (e.key === 'Escape') {\n                    this.props.onDismiss();\n                }\n            };\n            this.attachListeners = () => {\n                BackHandler.addEventListener('hardwareBackPress', this.handleDismiss);\n                Dimensions.addEventListener('change', this.handleDismiss);\n                this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n            };\n            this.removeListeners = () => {\n                BackHandler.removeEventListener('hardwareBackPress', this.handleDismiss);\n                Dimensions.removeEventListener('change', this.handleDismiss);\n                this.isBrowser() &&\n                    document.removeEventListener('keyup', this.handleKeypress);\n            };\n            this.show = async () => {\n                const windowLayout = Dimensions.get('window');\n                const [menuLayout, anchorLayout] = await Promise.all([\n                    this.measureMenuLayout(),\n                    this.measureAnchorLayout(),\n                ]);\n                // When visible is true for first render\n                // native views can be still not rendered and\n                // measureMenuLayout/measureAnchorLayout functions\n                // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n                // so we have to wait until views are ready\n                // and rerun this function to show menu\n                if (!windowLayout.width ||\n                    !windowLayout.height ||\n                    !menuLayout.width ||\n                    !menuLayout.height ||\n                    (!anchorLayout.width && !this.isAnchorCoord()) ||\n                    (!anchorLayout.height && !this.isAnchorCoord())) {\n                    requestAnimationFrame(this.show);\n                    return;\n                }\n                this.setState(() => ({\n                    left: anchorLayout.x,\n                    top: anchorLayout.y,\n                    anchorLayout: {\n                        height: anchorLayout.height,\n                        width: anchorLayout.width,\n                    },\n                    menuLayout: {\n                        width: menuLayout.width,\n                        height: menuLayout.height,\n                    },\n                }), () => {\n                    this.attachListeners();\n                    const { animation } = this.props.theme;\n                    Animated.parallel([\n                        Animated.timing(this.state.scaleAnimation, {\n                            toValue: { x: menuLayout.width, y: menuLayout.height },\n                            duration: ANIMATION_DURATION * animation.scale,\n                            easing: EASING,\n                            useNativeDriver: true,\n                        }),\n                        Animated.timing(this.state.opacityAnimation, {\n                            toValue: 1,\n                            duration: ANIMATION_DURATION * animation.scale,\n                            easing: EASING,\n                            useNativeDriver: true,\n                        }),\n                    ]).start(({ finished }) => {\n                        if (finished) {\n                            this.focusFirstDOMNode(this.menu);\n                        }\n                    });\n                });\n            };\n            this.hide = () => {\n                this.removeListeners();\n                const { animation } = this.props.theme;\n                Animated.timing(this.state.opacityAnimation, {\n                    toValue: 0,\n                    duration: ANIMATION_DURATION * animation.scale,\n                    easing: EASING,\n                    useNativeDriver: true,\n                }).start(finished => {\n                    if (finished) {\n                        this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\n                        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n                        this.focusFirstDOMNode(this.anchor);\n                    }\n                });\n            };\n        }\n        static getDerivedStateFromProps(nextProps, prevState) {\n            if (nextProps.visible && !prevState.rendered) {\n                return { rendered: true };\n            }\n            return null;\n        }\n        componentDidUpdate(prevProps) {\n            if (prevProps.visible !== this.props.visible) {\n                this.updateVisibility();\n            }\n        }\n        componentWillUnmount() {\n            this.removeListeners();\n        }\n        render() {\n            const { visible, anchor, contentStyle, style, children, theme, statusBarHeight, onDismiss, } = this.props;\n            const { rendered, menuLayout, anchorLayout, opacityAnimation, scaleAnimation, } = this.state;\n            let { left, top } = this.state;\n            // I don't know why but on Android measure function is wrong by 24\n            const additionalVerticalValue = Platform.select({\n                android: statusBarHeight,\n                default: 0,\n            });\n            const scaleTransforms = [\n                {\n                    scaleX: scaleAnimation.x.interpolate({\n                        inputRange: [0, menuLayout.width],\n                        outputRange: [0, 1],\n                    }),\n                },\n                {\n                    scaleY: scaleAnimation.y.interpolate({\n                        inputRange: [0, menuLayout.height],\n                        outputRange: [0, 1],\n                    }),\n                },\n            ];\n            const windowLayout = Dimensions.get('window');\n            // We need to translate menu while animating scale to imitate transform origin for scale animation\n            const positionTransforms = [];\n            // Check if menu fits horizontally and if not align it to right.\n            if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n                positionTransforms.push({\n                    translateX: scaleAnimation.x.interpolate({\n                        inputRange: [0, menuLayout.width],\n                        outputRange: [-(menuLayout.width / 2), 0],\n                    }),\n                });\n                // Check if menu position has enough space from left side\n                if (left < SCREEN_INDENT) {\n                    left = SCREEN_INDENT;\n                }\n            }\n            else {\n                positionTransforms.push({\n                    translateX: scaleAnimation.x.interpolate({\n                        inputRange: [0, menuLayout.width],\n                        outputRange: [menuLayout.width / 2, 0],\n                    }),\n                });\n                left += anchorLayout.width - menuLayout.width;\n                const right = left + menuLayout.width;\n                // Check if menu position has enough space from right side\n                if (right > windowLayout.width - SCREEN_INDENT) {\n                    left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n                }\n            }\n            // If the menu is larger than available vertical space,\n            // calculate the height of scrollable view\n            let scrollableMenuHeight = 0;\n            // Check if the menu should be scrollable\n            if (\n            // Check if the menu overflows from bottom side\n            top >=\n                windowLayout.height -\n                    menuLayout.height -\n                    SCREEN_INDENT -\n                    additionalVerticalValue &&\n                // And bottom side of the screen has more space than top side\n                top <= windowLayout.height - top) {\n                // Scrollable menu should be below the anchor (expands downwards)\n                scrollableMenuHeight =\n                    windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n            }\n            else if (\n            // Check if the menu overflows from bottom side\n            top >=\n                windowLayout.height -\n                    menuLayout.height -\n                    SCREEN_INDENT -\n                    additionalVerticalValue &&\n                // And top side of the screen has more space than bottom side\n                top >= windowLayout.height - top &&\n                // And menu overflows from top side\n                top <=\n                    menuLayout.height -\n                        anchorLayout.height +\n                        SCREEN_INDENT -\n                        additionalVerticalValue) {\n                // Scrollable menu should be above the anchor (expands upwards)\n                scrollableMenuHeight =\n                    top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n            }\n            // Scrollable menu max height\n            scrollableMenuHeight =\n                scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n                    ? windowLayout.height - 2 * SCREEN_INDENT\n                    : scrollableMenuHeight;\n            // Menu is typically positioned below the element that generates it\n            // So first check if it fits below the anchor (expands downwards)\n            if (\n            // Check if menu fits vertically\n            top <=\n                windowLayout.height -\n                    menuLayout.height -\n                    SCREEN_INDENT -\n                    additionalVerticalValue ||\n                // Or if the menu overflows from bottom side\n                (top >=\n                    windowLayout.height -\n                        menuLayout.height -\n                        SCREEN_INDENT -\n                        additionalVerticalValue &&\n                    // And bottom side of the screen has more space than top side\n                    top <= windowLayout.height - top)) {\n                positionTransforms.push({\n                    translateY: scaleAnimation.y.interpolate({\n                        inputRange: [0, menuLayout.height],\n                        outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n                    }),\n                });\n                // Check if menu position has enough space from top side\n                if (top < SCREEN_INDENT) {\n                    top = SCREEN_INDENT;\n                }\n            }\n            else {\n                positionTransforms.push({\n                    translateY: scaleAnimation.y.interpolate({\n                        inputRange: [0, menuLayout.height],\n                        outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n                    }),\n                });\n                top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n                const bottom = top +\n                    (scrollableMenuHeight || menuLayout.height) +\n                    additionalVerticalValue;\n                // Check if menu position has enough space from bottom side\n                if (bottom > windowLayout.height - SCREEN_INDENT) {\n                    top =\n                        scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n                            ? -SCREEN_INDENT * 2\n                            : windowLayout.height -\n                                menuLayout.height -\n                                SCREEN_INDENT -\n                                additionalVerticalValue;\n                }\n            }\n            const shadowMenuContainerStyle = {\n                opacity: opacityAnimation,\n                transform: scaleTransforms,\n                borderRadius: theme.roundness,\n                ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n            };\n            const positionStyle = {\n                top: this.isAnchorCoord() ? top : top + additionalVerticalValue,\n                ...(I18nManager.isRTL ? { right: left } : { left }),\n            };\n            return (React.createElement(View, { ref: ref => {\n                    this.anchor = ref;\n                }, collapsable: false },\n                this.isAnchorCoord() ? null : anchor,\n                rendered ? (React.createElement(Portal, null,\n                    React.createElement(TouchableWithoutFeedback, { onPress: onDismiss },\n                        React.createElement(View, { style: StyleSheet.absoluteFill })),\n                    React.createElement(View, { ref: ref => {\n                            this.menu = ref;\n                        }, collapsable: false, accessibilityViewIsModal: visible, style: [styles.wrapper, positionStyle, style], pointerEvents: visible ? 'box-none' : 'none' },\n                        React.createElement(Animated.View, { style: { transform: positionTransforms } },\n                            React.createElement(Surface, { style: [\n                                    styles.shadowMenuContainer,\n                                    shadowMenuContainerStyle,\n                                    contentStyle,\n                                ] }, (scrollableMenuHeight && (React.createElement(ScrollView, null, children))) || React.createElement(React.Fragment, null, children)))))) : null));\n        }\n    }\n    // @component ./MenuItem.tsx\n    Menu.Item = MenuItem;\n    Menu.defaultProps = {\n        statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n    };\n    return Menu;\n})();\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: 'absolute',\n    },\n    shadowMenuContainer: {\n        opacity: 0,\n        paddingVertical: 8,\n        elevation: 8,\n    },\n});\nexport default withTheme(Menu);\n"]}